# Census Data

## Misc

-   FIPS GEOID\
    ![](./_resources/Surveys,_Census_Data.resources/image.png){.lightbox width="332"}
-   [popular variable calculations from variables in ACS](https://stats.andrewheiss.com/zany-zebra/notebook/acs-data.html)
-   Census Geocoder ([link](http://geocoding.geo.census.gov))
    -   Enter an address and codes for various geographies are returned
    -   Batch geocoding available for up to 10K records
        -   Codes for geographies returned in a .csv file
-   TIGERweb ([link](http://tigerweb.geo.census.gov/tigerweb))
    -   Allows you to get geography codes by searching for an area on a map
    -   Once zoomed-in on your desired area, you turn on geography layers to find the geography code for your area.
-   US Census Regions\
    ![](./_resources/Surveys,_Census_Data.resources/Screenshot%20(1386).png){.lightbox width="532"}

## Geographies

![](./_resources/Surveys,_Census_Data.resources/Screenshot%20(695).png){.lightbox group="geo" width="532"}

-   Misc

    -   ACS Geography Boundaries by Year ([link](http://census.gov/programs-surveys/acs/geography-acs/geography-boundaries-by-year-html))

-   Types

    -   Legal/Administrative
        -   Census gets boundaries from outside party (state, county, city, etc.)
        -   e.g. election areas, school districts, counties, county subdivisions
    -   Statistical
        -   Census creates these boundaries
        -   e.g. regions, census tracts, ZCTAs, block groups, MSAs, urban areas

-   Nested Areas\
    ![](./_resources/Surveys,_Census_Data.resources/Screenshot%20(697).png){.lightbox group="geo" width="432"}

    -   Census Tracts
        -   Areas within a county
        -   Around 1200 to 8000 people
        -   Small towns, rural areas, neighborhoods
        -   \*\* Census tracts may cross city boundaries \*\*
    -   Block Groups
        -   Areas within a census tract
        -   Around 600 to 3000 people
    -   Census Blocks
        -   Areas within a block group
        -   Not for ACS, only for the 10-yr census

-   Places

    -   Misc
        -   One place cannot overlap another place
        -   Expand and contract as population or commercial activity increases or decreases
        -   Must represent an organized settlement of people living in close proximity.
    -   Incorporated Places
        -   cities, towns, villages
        -   Updated through Boundary and Annexation Survey (BAS) yearly
    -   Census Designated Places (CDPs)
        -   Areas that can't become Incorporated Places because of state or city regulations
        -   Concentrations of population, housing, commericial structures
        -   Updated through Boundary and Annexation Survey (BAS) yearly

-   County Subdivisions

    -   Minor Civil Divisions (MCDs)
        -   Legally defined by the state or county, stable entity. May have elected government
        -   e.g. townships, charter townships, or districts
    -   Census County Divisions (CCDs)
        -   no population requirment
        -   Subcounty units with stable boundaries and recognizable names

-   Zip Code Tabulation Areas (ZCTAs)\
    ![](./_resources/Surveys,_Census_Data.resources/Screenshot%20(696).png){.lightbox group="geo" width="432"}

    -   Misc
        -   [{]{style="color: #990000"}[crosswalkZCTA](https://cran.r-project.org/web/packages/zctaCrosswalk/index.html){style="color: #990000"}[}]{style="color: #990000"} - Contains the US Census Bureau's 2020 ZCTA to County Relationship File, as well as convenience functions to translate between States, Counties and ZIP Code Tabulation Areas (ZCTAs)
    -   Approximate USPS Code distribution for housing units
        -   The most frequently occurring zip code within an census block is assigned to a census block
        -   Then blocks are aggregated into areas (ZCTAs)
    -   ZCTAs do NOT nest within any other geographies
        -   I guess the aggregated ZCTA blocks can overlap block groups
    -   2010 ZCTAs exclude large bodies of water and unpopulated areas

## American Community Survey

-   About
    -   Yearly estimates based on *samples* of the population over a 5yr period
        -   Therefore a Margin of Error (MoE) is included with the estimates.
    -   Detailed social, economic, housing, and demographic characteristics
    -   [census.gov/acs](http://census.gov/acs)
-   ACS Release Schedule ([releases](https://census.gov/programs-surveys/acs/news/data-releases.html))
    -   September - 1-Year Estimates (from previous year's collection)
        -   Estimates for areas with populations of \>65K
    -   October - 1-Year Supplemental Estimates
        -   Estimates for areas with populations between 20K-64999
    -   December - 5-Year Estimates
        -   Estimates for areas including census tract and block groups
-   Data Collected
    -   Population
        -   Social
            -   Ancestry, Citizenship, Citizen Voting AgeÂ  Population, Disability, Education Attainment, Fertility, Grandparents, Language, Marital Status, Migration, School Enrollment, Veterans
        -   Demographic
            -   Age, Hispanic Origin, Race, Relationship, Sex
        -   Economic
            -   Class of worker, Commuting, Employment Status, Food Stamps (SNAP), Health Insurance, Hours/Week, Weeks/Year, Income, Industry & Occupation
    -   Housing
        -   Computer & Internet Use, Costs (Mortgage, Taxes, Insurance), Heating Fuel, Home Value, Occupancy, Plumbing/Kitchen Facilities, Structure, Tenure (Own/Rent), Utilities, Vehicles, Year Built/Year Movied In

## Dicennial US Census

### Misc

-   A complete count and not based on samples like the ACS
-   Applies differential privacy to preserve respondent confidentiality
    -   Adds noise to data. Greater effect at lower levels (i.e. block level)

### PL94-171

-   Population data which the government needs for redistricting

-   State Populations

    ``` r
    pop20 <- get_decennial(
      geography = "state",
      variables = "P1_001N",
      year = 2020
    )
    ```

-   County

    ``` r
    tx_population <- get_decennial(
      geography = "county",
      variables = "P1_001N",
      state = "TX",
      sumfile = "dhc",
      year = 2020
    )
    ```

-   Census Block (analogous to a city block)

    ``` r
    matagorda_blocks <- get_decennial(
      geography = "block",
      variables = "P1_001N",
      state = "TX",
      county = "Matagorda",
      sumfile = "dhc",
      year = 2020
    )
    ```

### DHC

-   Age, Sex, Race, Ethnicity, and Housing Tenure (most popular dataset)
-   sumfile = "dhc"

### Demographic Profile

-   Pretabulated percentages from dhc

-   `sumfile = "dp"`

-   C suffix variables is counts while P suffix variables are percentages

    -   0.4 is 0.4% not 40%

-   Example: Same-sex married and partnered in California by County

    ``` r
    ca_samesex <- get_decennial(
      geography = "county",
      state = "CA",
      variables = c(married = "DP1_0116P",
                    partnered = "DP1_0118P"),
      year = 2020,
      sumfile = "dp",
      output = "wide"
    )
    ```

-   Tabulations for 118th Congress and Island Areas (i.e. congressional districts)

    -   `sumfile = "cd118"`

### Detailed DHC-A

-   Detailed demographic data; breakouts for thousands of racial and ethnic groups; tabulation by sex and age.

-   different groups in different tables

-   considerable sparsity especially when going down census tract

-   adaptive design means demographic group (i.e. variable) only available in certain areas. Data gets supressed for low population for privacy

-   Use dot density and not chloropleths to visualize these sparse data

    -   Example

        ``` r
        code
        ```

-   args

    -   `sumfile = "ddhca"`
    -   pop_group - population group code
        -   "all" for all groups
        -   pop_group_label = TRUE - add group labels

-   `get_pop_groups(2020, "ddhca")` - Gets group codes for ethnic groups

    -   For various groups there could be at least two variable (e..g Somaili, Somali and any combination)

-   check_ddhca_groups - Checks which variables are available for a specific group

    -   Example: Somali

        ``` r
        check_ddhca_groups
        ```

-   Example: Minnesota, somali

    ``` r
    ddhca_vars <- load_variables(2020, "ddhca") %>% 
      View()
    mn_population_groups <- get_decennial(
      geography = "state",
      variables = "T01001_001N",
      state = "MN",
      year = 2020,
      sumfile = "ddhca",
      pop_group = "all",
      pop_group_label = TRUE
    )
    ```

    -   european alone, Other white alone, etc values so you can aggregate the value column

### Time Series Analysis

-   tidycensus only 2020 and 2010

    -   See <https://nhgis.org> for previous census values

-   Issue: county names and boundaries change (e.g. Alaska redraws a lot)

    -   Census gives a different GeoID to counties that rename even though they're it's the same county
    -   NA values showing up after you calculate how the value changes over time is a good indication of this problem: `filter(county_change, is.na(value10))`

-   Example: Join 2010 and 2020

    ``` r
    county_pop_10 <- get_decennial(
      geography = "county",
      variables = "P001001", 
      year = 2010,
      sumfile = "sf1"
    )

    county_pop_10_clean <- county_pop_10 %>%
      select(GEOID, value10 = value) 

    county_pop_20 <- get_decennial(
      geography = "county",
      variables = "P1_001N",
      year = 2020,
      sumfile = "dhc"
    ) %>%
      select(GEOID, NAME, value20 = value)

    county_joined <- county_pop_20 %>%
      left_join(county_pop_10_clean, by = "GEOID") 

    county_joined

    county_change <- county_joined %>%
      mutate( 
        total_change = value20 - value10, 
        percent_change = 100 * (total_change / value10) 
      ) 
    ```

-   Example: Age distribution over time in Michigan

## tidycensus

-   questions
    -   get api key details
    -   rewatch variables part to get suffixes prefixes
    -   census tract question 2:22
    -   check ddhca group variables 2:40
    -   dot density example 242
    -   age distribution 253
-   get api key
    -   Website
    -   code
-   Search Variables
    -   Name - ID of the variable

        -   Prefixes
            -   P person H household,, ct - census track, N - numerator? (counts?)

    -   Example: DHC 2020

        ``` r
        vars <- load_variables(2020, "dhc")

        View(vars)
        ```

        -   View table and click filter and then search for parameters (e.g. Age, Median, etc.) with the "label" and "contex" boxes
-   [summary_var]{.arg-text} - Argument for supplying an additional variable that you need to calculate some kind of summary statistic
    -   Example: Race Percentage per Congressional District

        ``` r

        race_vars <- c(
          Hispanic = "P5_010N", # all races identified as hispanic
          White = "P5_003N", # white not hispanic
          Black = "P5_004N", # black not hispanic
          Native = "P5_005N", # native american not hispanic
          Asian = "P5_006N", # asian not hispanic
          HIPI = "P5_007N" # hawaiian, islander not hispanic
        )

        cd_race <- get_decennial(
          geography = "congressional district",
          variables = race_vars,
          summary_var = "P5_001N", # total population for county
          year = 2020,
          sumfile = "cd118"
        )

        cd_race_percent <- cd_race %>%
          mutate(percent = 100 * (value / summary_value)) %>% 
          select(NAME, variable, percent)
        ```
-   [geometry = TRUE]{.arg-text}- Joins shapefile with data and returns a SF (Simple Features) dataframe for mapping
    -   Example: Over 65 in Iowa by census tract

        ``` r
        library(mapviw); library(viridisLite)

        iowa_over_65 <- get_decennial(
          geography = "tract",
          variables = "DP1_0024P",
          state = "IA",
          geometry = TRUE,
          sumfile = "dp",
          year = 2020
        )
        m1 <- mapview(iowa_over_65, zcol = "value",
                layer.name = "% age 65 and up<br>Census tracts in Iowa",
                col.regions = inferno(100))
        ```

    -   Export as an HTML file

        ``` r
        htmlwidgets::saveWidget(m1@map, "iowa_over_65.html")
        ```

        -   Can embed it elsewhere (html report or website) by adding it as an asset
