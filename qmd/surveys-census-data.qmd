# Census Data {#sec-surv-cens .unnumbered}

## Misc {#sec-surv-cens-misc .unnumbered}

-   Notes from
    -   [Tidycensus Workshop 2024](https://github.com/walkerke/umich-workshop-2024)
-   Packages
    -   [{]{style="color: #990000"}[tidycensus](https://walker-data.com/tidycensus/){style="color: #990000"}[}]{style="color: #990000"} - Allows users to easily interface with a select number of the US Census Bureau’s data APIs and return tidyverse-ready data frames, optionally with simple feature geometry included
        -   Dicennial US Census and ACS
        -   Also Population Estimates API and Migration Flows API (See Other Datasets [Vignette](https://walker-data.com/tidycensus/articles/other-datasets.html))
    -   [{]{style="color: #990000"}[censusapi](https://www.hrecht.com/censusapi/){style="color: #990000"}[}]{style="color: #990000"} - Access all Census APIs
    -   [{]{style="color: #990000"}[lehdr](https://github.com/jamgreen/lehdr){style="color: #990000"}[}]{style="color: #990000"} - Allows users to interface with Origin-Destination Employment Statistics (LODES) dataset returned as dataframes.
        -   LODES data is part of the LEHD survey (See below)
-   Resources
    -   [Analyzing Census Data: Methods, Maps, and Models in R](https://walker-data.com/census-r/index.html) by Kyle Walker
-   Other Surveys
    -   [IPUMS](https://www.ipums.org/) - A University of Minnesota project that's supported by a consortium of other institutions and companies. Provides access to many types of census and survey data through its website and API.
        -   Includes CPS, ACS, census microtata for 100+ countries, [historical GIS shapefiles](#0), [time use surveys](#0), and more.
        -   Some or maybe all surveys require registering an account and agreeing to usage constraints.
        -   Constraints
            -   You will not redistribute the data without permission
            -   You will use the data in these data files for statistical reporting and analysis only
            -   You will not use the data to identify individuals
            -   Cite the IPUMS data appropriately
                -   For information on proper citation refer to [citation and use](https://nhis.ipums.org/nhis/citation.shtml). Publications and research reports making use of IPUMS NHIS should be added to our [Bibliography](#0).
    -   [American Housing Survey (AHS)](https://www.census.gov/programs-surveys/ahs.html)
        -   Zillow also publishes a bunch of housing data (See [Real Estate \>\> Features](https://ercbk.github.io/Domain-Knowledge-Notebook/qmd/real-estate.html#sec-rlest-feats){style="color: green"})
    -   [General Social Survey (GSS)](https://gss.norc.org/)
        -   Conducted since 1972. Contains a standard core of demographic, behavioral, and attitudinal questions, plus topics of special interest. Among the topics covered are civil liberties, crime and violence, intergroup tolerance, morality, national spending priorities, psychological well-being, social mobility, and stress and traumatic events.
        -   Packages
            -   [{]{style="color: #990000"}[gssr](https://kjhealy.github.io/gssr/){style="color: #990000"}[}]{style="color: #990000"} - Convenient interface that provides access to GSS data
            -   [{]{style="color: #990000"}[gssrdoc](https://kjhealy.github.io/gssrdoc/){style="color: #990000"}[}]{style="color: #990000"} - Companion package to [{gssr}]{style="color: #990000"}
                -   Provides documentation for all GSS variables in the cumulative data file via R’s help system.
                -   Browse variables by name in the package’s help file or type ? followed by the name of the variable at the console to get a standard R help page containing information on the variable, the values it takes and (in most cases) a crosstabulation of the variable’s values for each year of the GSS.
    -   [Demographic and Health Surveys (DHS)](https://www.dhsprogram.com/) - The program has collected, analyzed, and disseminated accurate and representative data on population, health, HIV, and nutrition through more than 400 surveys in over 90 countries
        -   Packages
            -   [{]{style="color: #990000"}[DHSr](https://cran.r-project.org/web/packages/DHSr/index.html){style="color: #990000"}[}]{style="color: #990000"} - Mapping, spatial analysis, and statistical modeling of microdata from sources such as DHS and IPUMS (Integrated Public Use Microdata Series)
                -   Supports spatial correlation index construction and visualization, along with empirical Bayes approximation of regression coefficients in a multistage setup
                -   Create large scale repeated regression statistics
                    -   e.g. Run regression for n groups, the group ID should be vertically composed into the variable for the parameter 'location_var'.
                    -   glms, logit, probit, and more.
    -   [U.S. National Health Interview Survey (NHIS)](https://www.cdc.gov/nchs/nhis/index.html) - Monitored the health of the nation since 1957. NHIS data on a broad range of health topics are collected through personal household interviews. Survey results have been instrumental in providing data to track health status, health care access, and progress toward achieving national health objectives. ([source](https://www.census.gov/programs-surveys/nhis.html)) - Obtained from the IPUMS, an integrated collection of microdata and tabulations from official statistics programs of the U.S. and other countries - Uses a stratified, multistage sample design - Availability
        -   [IPUMS](https://nhis.ipums.org/nhis-action/variables/group)
        -   [CDC](https://www.cdc.gov/nchs/nhis/documentation/index.html)
    -   [Current Population Survey (CPS)](https://cps.ipums.org/cps/index.shtml) - From 1962 to the present. Data include demographic information, rich employment data, program participation and supplemental data on topics such as fertility, tobacco use, volunteer activities, voter registration, computer and internet use, food security, and more.
        -   Alternative to the ACS for getting nationally representative demographic data.
            -   Census Bureau's [faq](https://www.census.gov/topics/income-poverty/poverty/guidance/data-sources/acs-vs-cps.html) on the differences
            -   Notably, the ACS only surveys *households*, and it uses a shorter 8-question survey, while the CPS tries to reach the entire civilian noninstitutionalized population and uses a longer, more detailed survey.
        -   A monthly survey of ≈100,000 US individuals. A more comprehensive annual version—the Annual Social and Economic Supplement (ASEC)—is published every March.
        -   Heiss [article](https://www.andrewheiss.com/blog/2025/01/27/ipums-cps-proportions-bayes/) on comparing your survey data estimates to CPS population estimates
    -   [Longitudinal Employer-Household Dynamics (LEHD)](https://lehd.ces.census.gov/) - Since 1999, the survey has explored the interactions between workers and firms. By linking employer and household data, the LEHD program has built a comprehensive database of longitudinally linked jobs data.
        -   [Access](https://lehd.ces.census.gov/data/)
        -   Job-to-Job Flows (J2J)
        -   Origin-Destination Employment Statistics (LODES) (See R package)
        -   Post-Secondary Employment Outcomes (PSEO)
        -   Quarterly Workforce Indicators (QWI)
        -   Veteran Employment Outcomes (VEO)
        -   Restricted-Use Microdata
-   For details on joining census data to other data, see [Chapter 7.2](https://walker-data.com/census-r/spatial-analysis-with-us-census-data.html#spatial-joins) in Analyzing Census Data
-   FIPS GEOID\
    ![](./_resources/Surveys,_Census_Data.resources/image.png){.lightbox width="332"}
-   Census Geocoder ([link](http://geocoding.geo.census.gov))
    -   Enter an address and codes for various geographies are returned
    -   Batch geocoding available for up to 10K records
        -   Codes for geographies returned in a .csv file
-   TIGERweb ([link](http://tigerweb.geo.census.gov/tigerweb))
    -   Allows you to get geography codes by searching for an area on a map
    -   Once zoomed-in on your desired area, you turn on geography layers to find the geography code for your area.
-   US Census Regions\
    ![](./_resources/Surveys,_Census_Data.resources/Screenshot%20(1386).png){.lightbox width="532"}

## Geographies {#sec-surv-cens-geo .unnumbered}

![](./_resources/Surveys,_Census_Data.resources/census-geo-1.png){.lightbox group="geo" width="532"}

-   Misc

    -   [{tidycensus}]{style="color: #990000"} [docs](https://walker-data.com/tidycensus/articles/basic-usage.html#geography-in-tidycensus) on various geographies, function arguments, and which surveys (ACS, Census) they're available in.
    -   ACS Geography Boundaries by Year ([link](http://census.gov/programs-surveys/acs/geography-acs/geography-boundaries-by-year-html))

-   Types

    -   Legal/Administrative
        -   Census gets boundaries from outside party (state, county, city, etc.)
        -   e.g. election areas, school districts, counties, county subdivisions
    -   Statistical
        -   Census creates these boundaries
        -   e.g. regions, census tracts, ZCTAs, block groups, MSAs, urban areas

-   Nested Areas\
    ![](./_resources/Surveys,_Census_Data.resources/Screenshot%20(697).png){.lightbox group="geo" width="432"}

    -   Census Tracts
        -   Areas within a county
        -   Around 1200 to 8000 people
        -   Small towns, rural areas, neighborhoods
        -   \*\* Census tracts may cross city boundaries \*\*
    -   Block Groups
        -   Areas within a census tract
        -   Around 600 to 3000 people
    -   Census Blocks
        -   Areas within a block group
        -   Not for ACS, only for the 10-yr census

-   Places

    -   Misc
        -   One place cannot overlap another place
        -   Expand and contract as population or commercial activity increases or decreases
        -   Must represent an organized settlement of people living in close proximity.
    -   Incorporated Places
        -   cities, towns, villages
        -   Updated through Boundary and Annexation Survey (BAS) yearly
    -   Census Designated Places (CDPs)
        -   Areas that can't become Incorporated Places because of state or city regulations
        -   Concentrations of population, housing, commericial structures
        -   Updated through Boundary and Annexation Survey (BAS) yearly

-   County Subdivisions

    -   Minor Civil Divisions (MCDs)
        -   Legally defined by the state or county, stable entity. May have elected government
        -   e.g. townships, charter townships, or districts
    -   Census County Divisions (CCDs)
        -   no population requirment
        -   Subcounty units with stable boundaries and recognizable names

-   Zip Code Tabulation Areas (ZCTAs)\
    ![](./_resources/Surveys,_Census_Data.resources/Screenshot%20(696).png){.lightbox group="geo" width="432"}

    -   Misc
        -   Regular zip codes are problematic — can cross state lines.
        -   [{]{style="color: #990000"}[crosswalkZCTA](https://cran.r-project.org/web/packages/zctaCrosswalk/index.html){style="color: #990000"}[}]{style="color: #990000"} - Contains the US Census Bureau's 2020 ZCTA to County Relationship File, as well as convenience functions to translate between States, Counties and ZIP Code Tabulation Areas (ZCTAs)
    -   Approximate USPS Code distribution for housing units
        -   The most frequently occurring zip code within an census block is assigned to a census block
        -   Then blocks are aggregated into areas (ZCTAs)
    -   ZCTAs do NOT nest within any other geographies
        -   I guess the aggregated ZCTA blocks can overlap block groups
    -   2010 ZCTAs exclude large bodies of water and unpopulated areas
    -   2020 ZCTAs that cross state lines ([source](https://bsky.app/profile/kylewalker.bsky.social/post/3leidkps6ar2o), [code](https://github.com/walkerke/map-challenge-2023/blob/main/scripts/day-3-polygons.R))\
        ![](_resources/Surveys,_Census_Data.resources/geo-zcta-cross-state-bdry-1.jpg){.lightbox width="432"}

## American Community Survey (ACS) {#sec-surv-cens-acs .unnumbered}

-   Misc

    -   Heiss's [notebook](https://stats.andrewheiss.com/zany-zebra/notebook/acs-data.html) on accessing ACS
    -   Default MOE is a 90%CI
    -   [Popular variable calculations from variables in ACS](https://stats.andrewheiss.com/zany-zebra/notebook/acs-data.html)
    -   For variables, `vars <- load_variables(2022, "acs5")`
        -   For the 2022 5-year ACS,
            -   `"acs5"` for the Detailed Tables;
            -   `"acs5/profile"` for the Data Profile; aggregated statistics for acs5
                -   p (suffix): Percentage with appropriate denominator
            -   `"acs5/subject"` for the Subject Tables; and
            -   `"acs5/cprofile"` for the Comparison Profile
        -   Geographies only shown for 5-year ACS

-   About

    -   Yearly estimates based on *samples* of the population over a 5yr period
        -   Therefore a Margin of Error (MoE) is included with the estimates.
    -   Available as 1-year estimates (for geographies of population 65,000 and greater) and 5-year estimates (for geographies down to the block group)
    -   Detailed social, economic, housing, and demographic characteristics. Variables covering e.g. income, education, language, housing characteristics
    -   [census.gov/acs](http://census.gov/acs)

-   ACS Release Schedule ([releases](https://census.gov/programs-surveys/acs/news/data-releases.html))

    -   September - 1-Year Estimates (from previous year's collection)
        -   Estimates for areas with populations of \>65K
    -   October - 1-Year Supplemental Estimates
        -   Estimates for areas with populations between 20K-64999
    -   December - 5-Year Estimates
        -   Estimates for areas including census tract and block groups

-   Data Collected

    -   Population
        -   Social
            -   Ancestry, Citizenship, Citizen Voting Age  Population, Disability, Education Attainment, Fertility, Grandparents, Language, Marital Status, Migration, School Enrollment, Veterans
        -   Demographic
            -   Age, Hispanic Origin, Race, Relationship, Sex
        -   Economic
            -   Class of worker, Commuting, Employment Status, Food Stamps (SNAP), Health Insurance, Hours/Week, Weeks/Year, Income, Industry & Occupation
    -   Housing
        -   Computer & Internet Use, Costs (Mortgage, Taxes, Insurance), Heating Fuel, Home Value, Occupancy, Plumbing/Kitchen Facilities, Structure, Tenure (Own/Rent), Utilities, Vehicles, Year Built/Year Movied In

-   [Example]{.ribbon-highlight}: Median Household Income for Texas Counties

    ``` r
    texas_income <- get_acs(
      geography = "county",
      variables = "B19013_001", # median household income
      state = "TX",
      year = 2022
    )
    ```

    -   Default MOE is a 90%CI (i.e. estimate $\pm$ MOE)

-   [Example]{.ribbon-highlight}: Census Tract for Multiple Counties in NY

    ``` r
    nyc_income <- get_acs(
      geography = "tract",
      variables = "B19013_001",
      state = "NY",
      county = c("New York", "Kings", "Queens",
                 "Bronx", "Richmond"),
      year = 2022,
      geometry = TRUE
    )
    mapview(nyc_income, zcol = "estimate")
    ```

-   [Example]{.ribbon-highlight}: Multiple Races Percentages for San Diego County\
    ![](_resources/Surveys,_Census_Data.resources/acs-facet-race-1.png){.lightbox width="532"}

    ``` r
    san_diego_race_wide <- get_acs(
      geography = "tract",
      variables = c(
        Hispanic = "DP05_0073P",
        White = "DP05_0079P",
        Black = "DP05_0080P",
        Asian = "DP05_0082P"
      ),
      state = "CA",
      county = "San Diego",
      geometry = TRUE,
      output = "wide",
      year = 2022
    )
    faceted_choro <- ggplot(san_diego_race, aes(fill = estimate)) + 
      geom_sf(color = NA) + 
      theme_void() + 
      scale_fill_viridis_c(option = "rocket") + 
      facet_wrap(~variable) + 
      labs(title = "Race / ethnicity by Census tract",
           subtitle = "San Diego County, California",
           fill = "ACS estimate (%)",
           caption = "2018-2022 ACS | tidycensus R package")
    ```

    -   Allows for comparison, but for groups with less variation as compared to other groups since scaled according to *all* groups
        -   You'd want to make a separate map for the Black population in order to compare variation between counties.

-   Migrations Flows

    -   Example:

        ``` r
        fulton_inflow <- 
          get_flows(
            geography = "county",
            state = "GA",
            county = "Fulton",
            geometry = TRUE,
            year = 2020
          ) %>%
          filter(variable == "MOVEDIN") %>%
          na.omit()

        fulton_top_origins <- 
          fulton_inflow %>%
            slice_max(estimate, 
                      n = 30) 

        library(rdeck)

        Sys.getenv("MAPBOX_ACCESS_TOKEN")

        fulton_top_origins$centroid1 <- 
          st_transform(fulton_top_origins$centroid1, 4326)
        fulton_top_origins$centroid2 <- 
          st_transform(fulton_top_origins$centroid2, 4326)

        flow_map <- 
          rdeck(
            map_style = mapbox_light(), 
            initial_view_state = view_state(center = c(-98.422, 38.606), 
                                            zoom = 3, 
                                            pitch = 45)
          ) %>%
          add_arc_layer(
            get_source_position = centroid2,
            get_target_position = centroid1,
            data = as_tibble(fulton_top_origins),
            get_source_color = "#274f8f",
            get_target_color = "#274f8f",
            get_height = 1,
            get_width = scale_linear(estimate, range = 1:5),
            great_circle = TRUE
          )
        ```

        -   Width of lines is scaled to counts

## Dicennial US Census {#sec-surv-cens-dic .unnumbered}

### Misc {#sec-surv-cens-dic-misc .unnumbered}

-   A complete count — not based on samples like the ACS
-   Applies differential privacy to preserve respondent confidentiality
    -   Adds noise to data. Greater effect at lower levels (i.e. block level)
    -   The exception is that is no differetial privacy for household-level data.

### PL94-171 {#sec-surv-cens-dic-pl .unnumbered}

-   Population data which the government needs for redistricting

-   [sumfile = "pl"]{.arg-text}

-   State Populations

    ``` r
    pop20 <- 
      get_decennial(
        geography = "state",
        variables = "P1_001N",
        year = 2020
      )
    ```

    -   For 2020, default is [sumfile = "pl"]{.arg-text}

### DHC {#sec-surv-cens-dic-dhc .unnumbered}

-   Age, Sex, Race, Ethnicity, and Housing Tenure (most popular dataset)

-   [sumfile = "dhc"]{.arg-text}

-   County

    ``` r
    tx_population <- 
      get_decennial(
        geography = "county",
        variables = "P1_001N",
        state = "TX",
        sumfile = "dhc",
        year = 2020
      )
    ```

-   Census Block (analogous to a city block)

    ``` r
    matagorda_blocks <- 
      get_decennial(
        geography = "block",
        variables = "P1_001N",
        state = "TX",
        county = "Matagorda",
        sumfile = "dhc",
        year = 2020
      )
    ```

### Demographic Profile {#sec-surv-cens-dic-dp .unnumbered}

-   Pretabulated percentages from dhc

-   [sumfile = "dp"]{.arg-text}

    -   Tabulations for 118th Congress and Island Areas (i.e. Congressional Districts)
        -   [sumfile = "cd118"]{.arg-text}

-   C suffix variables are counts while P suffix variables are percentages

    -   0.4 is 0.4% not 40%

-   [Example]{.ribbon-highlight}: Same-sex married and partnered in California by County

    ``` r
    ca_samesex <- 
      get_decennial(
        geography = "county",
        state = "CA",
        variables = c(married = "DP1_0116P",
                      partnered = "DP1_0118P"),
        year = 2020,
        sumfile = "dp",
        output = "wide"
      )
    ```

### Detailed DHC-A {#sec-surv-cens-dic-dhca .unnumbered}

-   Detailed demographic data; Thousands of racial and ethnic groups; Tabulation by sex and age.

-   Different groups are in different tables, so specific groups can be hard to locate.

-   Adaptive design means the demographic group (i.e. variable) will only be available in certain areas. For privacy, data gets supressed when the area has low population.

    -   There's typically considerable sparsity especially when going down census tract

-   Args

    -   [sumfile = "ddhca"]{.arg-text}
    -   [pop_group]{.arg-text} - Population group code (See `get_pop_groups` below)
        -   ["all"]{.arg-text} for all groups
        -   [pop_group_label = TRUE]{.arg-text} - Adds group labels

-   `get_pop_groups(2020, "ddhca")` - Gets group codes for ethnic groups

    -   For various groups there could be at least two variables (e..g Somaili, Somali and any combination)
    -   For time series analysis, analagous groups to 2020's for 2000 is SF2/SF4 and for 2010 is SF2. (SF stands for Summary File)

-   `check_ddhca_groups` - Checks which variables are available for a specific group

    -   [Example]{.ribbon-highlight}: Somali

        ``` r
        check_ddhca_groups(
          geography = "county", 
          pop_group = "1325", 
          state = "MN", 
          county = "Hennepin"
        )
        ```

-   [Example]{.ribbon-highlight}: Minnesota group populations

    ``` r
    load_variables(2020, "ddhca") %>% 
      View()
    mn_population_groups <- 
      get_decennial(
        geography = "state",
        variables = "T01001_001N", # total population
        state = "MN",
        year = 2020,
        sumfile = "ddhca",
        pop_group = "all", # for all groups
        pop_group_label = TRUE
      )
    ```

    -   Includes aggregate categories like European Alone, Other White Alone, etc., so you can't just aggregate the value column to get the total population in Minnesota.
        -   So, in order to calculate ethnic group ratios of the total state or county, etc. population, you need to get those state/county totals from other tables (e.g. PL94-171)

-   Use dot density and not chloropleths to visualize these sparse datasets

    -   [Example]{.ribbon-highlight}: Somali populations by census tract in Minneapolis\
        ![](_resources/Surveys,_Census_Data.resources/dhca-somali-dot-1.png){.lightbox width="532"}

        ``` r
        hennepin_somali <- 
          get_decennial(
            geography = "tract",
            variables = "T01001_001N", # total population
            state = "MN",
            county = "Hennepin",
            year = 2020,
            sumfile = "ddhca",
            pop_group = "1325", # somali
            pop_group_label = TRUE,
            geometry = TRUE
          )

        somali_dots <- 
          as_dot_density(
            hennepin_somali,
            value = "value", # column name which is by default, "value"
            values_per_dot = 25
          )

        mapview(somali_dots, 
                cex = 0.01, 
                layer.name = "Somali population<br>1 dot = 25 people",
                col.regions = "navy", 
                color = "navy")
        ```

        -   [values_per_dot = 25]{.arg-text} says make each dot worth 25 units (e.g. people or housing units)

### Time Series Analysis {#sec-surv-cens-dic-tsa .unnumbered}

-   [{tidycensus}]{style="color: #990000"} only has 2010 and 2020 censuses

    -   See <https://nhgis.org> for older census data

-   Issue: county names and boundaries change over time (e.g. Alaska redraws a lot)

    -   Census gives a different GeoID to counties that get renamed even though they're the same county.
    -   NA values showing up after you calculate how the value changes over time is a good indication of this problem. Check for NAs: `filter(county_change, is.na(value10))`

-   [Example]{.ribbon-highlight}: Join 2010 and 2020 and Calculate Percent Change

    ``` r
    county_pop_10 <- 
      get_decennial(
        geography = "county",
        variables = "P001001", 
        year = 2010,
        sumfile = "sf1"
      )

    county_pop_10_clean <- 
      county_pop_10 %>%
        select(GEOID, value10 = value) 

    county_pop_20 <- 
      get_decennial(
        geography = "county",
        variables = "P1_001N",
        year = 2020,
        sumfile = "dhc"
      ) %>%
        select(GEOID, NAME, value20 = value)

    county_joined <- 
      county_pop_20 %>%
        left_join(county_pop_10_clean, by = "GEOID") 

    county_joined

    county_change <- 
      county_joined %>%
        mutate( 
          total_change = value20 - value10, 
          percent_change = 100 * (total_change / value10) 
        ) 
    ```

-   [Example]{.ribbon-highlight}: Age distribution over time in Michigan\
    ![](_resources/Surveys,_Census_Data.resources/michigan-age-chart-1.png){.lightbox width="432"}

    -   Code available in the github [repo](https://github.com/walkerke/umich-workshop-2024/blob/main/census-2020/bonus-chart.R) or R/Workshops/tidycensus-umich-workshop-2024-main/census-2020/bonus-chart.R
    -   Distribution shape remains pretty much the same, but decreasing for most age cohorts, i.e. people are leaving the state across most age groups.
        -   e.g. The large hump representing the group of people in there mid-40s in 2000 steadily decreases over time.

## tidycensus {#sec-surv-cens-tidyc .unnumbered}

-   Get an API key

    -   Request a key, then activate the key from the link in your email.(<https://api.census.gov/data/key_signup.html>)
        -   Required for hitting the census API over 500 times per day which isn't as hard as you'd think.
    -   Set as an environment variable: `census_api_key("<api key>", install = TRUE)`
        -   Or add this line to [.Renviron]{.arg-text} file, [CENSUS_API_KEY='\<api key']{.arg-text}

-   Search Variables

    -   Columns

        -   [Name]{.arg-text} - ID of the variable (Use this in the survey functions)
        -   [Label]{.arg-text} - Detailed description of the variable
        -   [Context]{.arg-text} - Subject of the table that the variable is located in.

    -   Prefixes (Variables can have combinations of prefixes)

        -   [P]{.arg-text}: i.e. Person; Data available at the census block and larger
        -   [CT]{.arg-text}: Data available at the census track and larger
        -   [H]{.arg-text}: Data available at the Housing Unit level
            -   I think housing unit is an alternatve unit. So instead of the unit being a person, which I assume is the typical unit, it's a housing unit (\~family).

            -   Not affected by Differential Privacy (i.e. no noise added; true value)

            -   [Example]{.ribbon-highlight}: Total Deleware housing units at census block level

                ``` r
                dp_households <- 
                      get_decennial(
                            geography = "block",
                            variables = "H1_001N",
                            state = "DE",
                            sumfile = "dhc",
                            year = 2020
                      )
                ```

    -   [Example]{.ribbon-highlight}: DHC data in census for 2020\
        ![](_resources/Surveys,_Census_Data.resources/search-vars-1.png){.lightbox width="432"}

        ``` r
        vars <- load_variables(2020, "dhc")

        View(vars)
        ```

        -   View table, click filter, and then search for parameters (e.g. Age, Median, etc.) with the Label, Context boxes, and overall search box

-   [summary_var]{.arg-text} - Argument for supplying an additional variable that you need to calculate some kind of summary statistic

    -   [Example]{.ribbon-highlight}: Race Percentage per Congressional District

        ``` r

        race_vars <- c(
          Hispanic = "P5_010N", # all races identified as hispanic
          White = "P5_003N", # white not hispanic
          Black = "P5_004N", # black not hispanic
          Native = "P5_005N", # native american not hispanic
          Asian = "P5_006N", # asian not hispanic
          HIPI = "P5_007N" # hawaiian, islander not hispanic
        )

        cd_race <- 
          get_decennial(
            geography = "congressional district",
            variables = race_vars,
            summary_var = "P5_001N", # total population for county
            year = 2020,
            sumfile = "cd118"
        )

        cd_race_percent <- 
          cd_race %>%
            mutate(percent = 100 * (value / summary_value)) %>% 
            select(NAME, variable, percent)
        ```

## Mapping {#sec-surv-cens-map .unnumbered}

### Misc {#sec-surv-cens-map-misc .unnumbered}

-   Use [geometry = TRUE]{.arg-text} for any of the `get_*` [{tidycensus}]{style="color: #990000"} functions, and it'll join the shapefile with the census data. Returns a SF (Simple Features) dataframe for mapping.

-   If you only want the shape files without the demographic data, see [{]{style="color: #990000"}[tigris](https://github.com/walkerke/tigris){style="color: #990000"}[}]{style="color: #990000"}

-   For examples with [{]{style="color: #990000"}[tmap](https://r-tmap.github.io/tmap/){style="color: #990000"}[}]{style="color: #990000"}, see [Chapter 6.3](https://walker-data.com/census-r/mapping-census-data-with-r.html#map-making-with-tmap) of Analyzing US Census Data

-   [{mapview}]{style="color: #990000"} along with some other packages gives you some tools for comparing maps (useful for eda or exploratory reports, etc.) ([m1]{.arg-text} and [m2]{.arg-text} are mapview objects)

    -   `m1 + m2` - Creates layers that allows you click the layers button and cycle through multiple maps. So I assume you could compare more than two maps here.
    -   `m1 | m2` - Creates swipe map (need [{leaflet.extras2}]{style="color: #990000"}). There will be a vertical slider that you can interactively slide horizontally to gradually expose one map or the other.
    -   `sync(m1, m2)` - Uses [{leafsync}]{style="color: #990000"} to create side by side maps. Zooming and cursor movement are synced on both maps.

### Preprocessing {#sec-surv-cens-map-proc .unnumbered}

-   Remove water from geographies\

    ::: {layout-ncol="2"}
    ![](_resources/Surveys,_Census_Data.resources/map-rm-water-before-1.png){.lightbox group="rmwat" fig-align="left" width="332"}\

    ![](_resources/Surveys,_Census_Data.resources/map-rm-water-after-1.png){.lightbox group="rmwat" fig-align="left" width="332"}
    :::

    ``` r
    nyc_income_tiger <- 
      get_acs(
        geography = "tract",
        variables = "B19013_001",
        state = "NY",
        county = c("New York", "Kings", "Queens",
                   "Bronx", "Richmond"),
        year = 2022,
        cb = FALSE,
        geometry = TRUE
    )

    library(tigris)
    library(sf)
    sf_use_s2(FALSE)

    nyc_erase <- 
      erase_water(
        nyc_income_tiger,
        area_threshold = 0.5,
        year = 2022
    )

    mapview(nyc_erase, zcol = "estimate")
    ```

    -   The left figure is before and the right figure is after water removal
        -   At the center-bottom, you can see how a sharp point is exposed where it was squared off before
        -   At the top-left, the point along the border which are piers/docks are now exposed.
        -   At the upper-middle, extraneous boundary lines have been removed and islands in the waterway are more clearly visible.
    -   Works **only** with regular tigris shapefiles from the US census bureau --- so not OpenStreetMaps, etc. For other shapefiles, you'd need to do the manual overlay, see [Chapter 7.1](https://walker-data.com/census-r/spatial-analysis-with-us-census-data.html?q=overlay#spatial-overlay) in Analyzing US Census Data for details.
    -   Can take a couple minutes to run
    -   [cb = FALSE]{.arg-text} says get the regular tigris line files which avoid sliver polygons which are caused by slight misalignment of layers (?)
    -   [area_threshold = 0.5]{.arg-text} says that water areas below the 50^th^ percentile in terms of size are removed. Probably a value you'll have to play around with.

### Choropleths {#sec-surv-cens-map-choro .unnumbered}

-   Best for continuous data like rates and percentages, but you can use for discrete variables

    -   You can create a discrete color palette with the [at]{.arg-text} argument in the `mapview` function.
        -   [Example]{.ribbon-highlight}

            ``` r
            # check min and max of your data to select range of bins
            min(iowa_over_65, 
                na.rm = TRUE) # 0
            max(iowa_over_65, 
                na.rm = TRUE) # 38.4

            m1 <- 
              mapview(
                iowa_over_65, 
                zcol = "value",
                layer.name = "% age 65 and up<br>Census tracts in Iowa",
                col.regions = inferno(100, direction = -1),
                at = c(0, 10, 20, 30, 40)
              )
            ```

            -   This will result in a discrete palette with bins of 0-10, 10-20, etc. Looks like an overlap, so I'm sure which bin contains the endpoints.

-   [Example]{.ribbon-highlight}: Over 65 in Iowa by census tract\
    ![](_resources/Surveys,_Census_Data.resources/tidycensus-iowa-65-1.png){.lightbox width="432"}

    ``` r
    library(mapviw); library(viridisLite)

    iowa_over_65 <- 
      get_decennial(
        geography = "tract",
        variables = "DP1_0024P",
        state = "IA",
        geometry = TRUE,
        sumfile = "dp",
        year = 2020
      )
    m1 <- 
      mapview(
        iowa_over_65, zcol = "value",
        layer.name = "% age 65 and up<br>Census tracts in Iowa",
        col.regions = inferno(100, 
                              direction = -1))
    ```

    -   {mapview} is interactive and great for exploration of data

-   Export as an HTML file

    ``` r
    htmlwidgets::saveWidget(m1@map, "iowa_over_65.html")
    ```

    -   Can embed it elsewhere (html report or website) by adding it as an asset

-   In [{ggplot}]{style="color: #990000"}

    ``` r
    texas_income_sf <- 
      get_acs(
        geography = "county",
        variables = "B19013_001",
        state = "TX",
        year = 2022,
        geometry = TRUE
    )

    plot(texas_income_sf['estimate'])
    ```

### Circle Maps {#sec-surv-cens-map-circ .unnumbered}

-   "Graduated Symbol" maps are better for count data. Even though using a choropleth is not as bad at the census tract level since all tracts have around 4000 people, the sizes of the tracts can be substantially different which can influence the interpretation. Using circles or bubbles, etc. focuses the user on the size of the symbol and less on the size of the geography polygons.

-   [Example]{.ribbon-highlight}: Hispanic Counts in San Diego County at the Census Tract Level\
    ![](_resources/Surveys,_Census_Data.resources/map-circle-1.png){.lightbox width="432"}

    ``` r

    san_diego_race_counts <- get_acs(
      geography = "tract",
      variables = c(
        Hispanic = "DP05_0073",
        White = "DP05_0079",
        Black = "DP05_0080",
        Asian = "DP05_0082"
      ),
      state = "CA",
      county = "San Diego",
      geometry = TRUE,
      year = 2022
    )

    san_diego_hispanic <- 
      filter(
        san_diego_race_counts, 
        variable == "Hispanic"
      )

    centroids <- st_centroid(san_diego_hispanic)

    grad_symbol <- 
      ggplot() + 
      geom_sf(
        data = san_diego_hispanic, 
        color = "black", 
        fill = "lightgrey") + 
      geom_sf(
        data = centroids, 
        aes(size = estimate),
        alpha = 0.7, 
        color = "navy") + 
      theme_void() + 
      labs(
        title = "Hispanic population by Census tract",
        subtitle = "2018-2022 ACS, San Diego County, California",
        size = "ACS estimate") + 
      scale_size_area(max_size = 6)
    ```

    -   `st_centroid` finds the center point of geography polygons which will be the location of the symbols. If you look at the geometry column it will say POINT, which only has a latitude and longitude, instead of POLYGON, which as multiple coordiates.

    -   `scale_size_area` scales the size of the circle according to the count value.

        -   [max_size]{.arg-text} is the maximum diameter of the circle which you'll want to adjust to be large enough so that you can differentiate the circles but small enough so you have the least amount of overlap between circles in neighboring geographies (although this is probably inevitable).

### Dot Density {#sec-surv-cens-map-dot .unnumbered}

-   Useful to show heterogeneity and mixing between groups versus plotting group facet maps.

-   [Example]{.ribbon-highlight}: Population by Race in San Diego County\
    ![](_resources/Surveys,_Census_Data.resources/map-dot-dens-1.png){.lightbox width="432"}

    ``` r
    san_diego_race_dots <- 
      as_dot_density(
        san_diego_race_counts, # see circle maps example for code
        value = "estimate", # group population
        values_per_dot = 200,
        group = "variable" # races
      )

    dot_density_map <- 
      ggplot() + 
      annotation_map_tile(type = "cartolight", 
                          zoom = 9) + 
      geom_sf(
        data = san_diego_race_dots, 
        aes(color = variable), 
        size = 0.01) + 
      scale_color_brewer(palette = "Set1") + 
      guides(color = guide_legend(override.aes = list(size = 3))) + 
      theme_void() + 
      labs(
        color = "Race / ethnicity",
        caption = "2018-2022 ACS | 1 dot = approximately 200 people")
    ```

    -   `as_dot_density` scatters the dots randomly within a geography. [values_per_dot]{.arg-text}says each dot is 200 units (e.g. people or households). Without shuffling, ggplot will layer each group's dots on top of each other.

    -   `annotation_map_tile` from [{ggspatial}]{style="color: #990000"} applies a base map layer as a reference for the user. Base maps have land marks and popular features labeled in the geography and surrounding areas to help the user identify the area being shown.

## IPUMS {#sec-surv-cens-ipums .unnumbered}

-   [Misc]{.underline}
    -   There's not *really* a lot to getting the data, but there are plenty of steps which can seem a little daunting if you haven't dealt with this sort of process before. Some aspects of getting the data:
        -   You have to set up an account where they ask who you are, what you do, and type of research for each type of survey, but it's just information collection and isn't determinative on whether you gain access to the data or not.
            -   Once you do it the first time, they're nice enough to fill out the fields for you when you want to get data from another survey.
        -   There can be oodles of variables to choose from.
        -   Some of the interfaces are slightly different
-   [Design Information]{.underline}
    -   You need to know information about the study design so that your variance estimates will be correct. This information will be inputs for the study design object if you're using [{survey}]{style="color: #990000"} or [{srvyr}]{style="color: #990000"}.
        -   What is the sampling unit id variable (e.g. primary sampling unit)
        -   Is there stratification? If so, what is the stratification id variable?
        -   Is there clustering? If so, has the cluster ids been nested inside the stratification id variable?
        -   Have the weights been included or do they need to be calculated?
-   [Getting the Data]{.underline}
    -   The workflow is essentially: Select variables $\rightarrow$ Select Years $\rightarrow$ Select Data Format $\rightarrow$ Download
    -   [Example]{.ribbon-highlight}: NHIS
        -   I'm using this data to follow along with a tutorial. See [Surveys, Analysis \>\> {srvyr}](surveys-analysis.qmd#sec-surveys-anal-srvyr){style="color: green"}.
        -   There are two surveys available\
            ![](_resources/Surveys,_Census_Data.resources/ipums-hs-sel-surv-1.png){.lightbox width="382"}
            -   I'm selecting National Health Interview Series
        -   Homepage\
            ![](_resources/Surveys,_Census_Data.resources/ipums-hs-homepage-1.png){.lightbox width="382"}
            -   There are two ways to get to the survey variables interface
        -   Variables\
            ![](_resources/Surveys,_Census_Data.resources/ipums-variables-1.png){.lightbox width="382"}
            -   The navbar shows various methods for selecting variables. I know what variables I'm after, so I'm just using the A-Z index. As the figure shows, there are many variables to choose from which can be overwhelming.

                -   Actually Search would've been the best option as I could type the variables directly in and add them.

            -   Other methods

                ::: {layout-ncol="3"}
                ![](_resources/Surveys,_Census_Data.resources/ipums-hs-sel-var-2.png){.lightbox group="nhis-nav-var-1" width="132"}

                ![](_resources/Surveys,_Census_Data.resources/ipums-hs-sel-var-3.png){.lightbox group="nhis-nav-var-1" width="142"}

                ![](_resources/Surveys,_Census_Data.resources/ipums-hs-sel-var-4.png){.lightbox group="nhis-nav-var-1" width="132"}
                :::
        -   Select Variables\
            ![](_resources/Surveys,_Census_Data.resources/ipums-select-var-1.png){.lightbox width="432"}
            -   Here I'm selecting AGE by clicking on the green plus. Also notice that SERIAL has been preselected. So the your dataset comes with some default variables
            -   Proceed to select all the variables that you want.
        -   Select Years\
            ![](_resources/Surveys,_Census_Data.resources/ipums-select-yrs-1.png){.lightbox width="332"}
            -   Once you selected all your variables, you click the Select Samples button.
                -   Or if you check your Cart first, it'll tell you to Select Samples.
            -   Then, select the years that you want.
        -   Review Variables and Create Extract\
            ![](_resources/Surveys,_Census_Data.resources/ipums-overview-1.png){.lightbox width="332"}
            -   After selecting your samples (i.e. years) and you submit them, it takes you to your Cart where you look over your variables.
            -   Then click Create Data Extract
