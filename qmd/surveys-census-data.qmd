# Census Data {#sec-surv-cens .unnumbered}

## Misc {#sec-surv-cens-misc .unnumbered}

-   Notes from
    -   [Tidycensus Workshop 2024](https://github.com/walkerke/umich-workshop-2024)
-   FIPS GEOID\
    ![](./_resources/Surveys,_Census_Data.resources/image.png){.lightbox width="332"}
-   [popular variable calculations from variables in ACS](https://stats.andrewheiss.com/zany-zebra/notebook/acs-data.html)
-   Census Geocoder ([link](http://geocoding.geo.census.gov))
    -   Enter an address and codes for various geographies are returned
    -   Batch geocoding available for up to 10K records
        -   Codes for geographies returned in a .csv file
-   TIGERweb ([link](http://tigerweb.geo.census.gov/tigerweb))
    -   Allows you to get geography codes by searching for an area on a map
    -   Once zoomed-in on your desired area, you turn on geography layers to find the geography code for your area.
-   US Census Regions\
    ![](./_resources/Surveys,_Census_Data.resources/Screenshot%20(1386).png){.lightbox width="532"}

## Geographies {#sec-surv-cens-geo .unnumbered}

![](./_resources/Surveys,_Census_Data.resources/census-geo-1.png){.lightbox group="geo" width="532"}

-   Misc

    -   [{tidycensus}]{style="color: #990000"} [docs](https://walker-data.com/tidycensus/articles/basic-usage.html#geography-in-tidycensus) on various geographies, function arguments, and which surveys (ACS, Census) they're available in.
    -   ACS Geography Boundaries by Year ([link](http://census.gov/programs-surveys/acs/geography-acs/geography-boundaries-by-year-html))

-   Types

    -   Legal/Administrative
        -   Census gets boundaries from outside party (state, county, city, etc.)
        -   e.g. election areas, school districts, counties, county subdivisions
    -   Statistical
        -   Census creates these boundaries
        -   e.g. regions, census tracts, ZCTAs, block groups, MSAs, urban areas

-   Nested Areas\
    ![](./_resources/Surveys,_Census_Data.resources/Screenshot%20(697).png){.lightbox group="geo" width="432"}

    -   Census Tracts
        -   Areas within a county
        -   Around 1200 to 8000 people
        -   Small towns, rural areas, neighborhoods
        -   \*\* Census tracts may cross city boundaries \*\*
    -   Block Groups
        -   Areas within a census tract
        -   Around 600 to 3000 people
    -   Census Blocks
        -   Areas within a block group
        -   Not for ACS, only for the 10-yr census

-   Places

    -   Misc
        -   One place cannot overlap another place
        -   Expand and contract as population or commercial activity increases or decreases
        -   Must represent an organized settlement of people living in close proximity.
    -   Incorporated Places
        -   cities, towns, villages
        -   Updated through Boundary and Annexation Survey (BAS) yearly
    -   Census Designated Places (CDPs)
        -   Areas that can't become Incorporated Places because of state or city regulations
        -   Concentrations of population, housing, commericial structures
        -   Updated through Boundary and Annexation Survey (BAS) yearly

-   County Subdivisions

    -   Minor Civil Divisions (MCDs)
        -   Legally defined by the state or county, stable entity. May have elected government
        -   e.g. townships, charter townships, or districts
    -   Census County Divisions (CCDs)
        -   no population requirment
        -   Subcounty units with stable boundaries and recognizable names

-   Zip Code Tabulation Areas (ZCTAs)\
    ![](./_resources/Surveys,_Census_Data.resources/Screenshot%20(696).png){.lightbox group="geo" width="432"}

    -   Misc
        -   [{]{style="color: #990000"}[crosswalkZCTA](https://cran.r-project.org/web/packages/zctaCrosswalk/index.html){style="color: #990000"}[}]{style="color: #990000"} - Contains the US Census Bureau's 2020 ZCTA to County Relationship File, as well as convenience functions to translate between States, Counties and ZIP Code Tabulation Areas (ZCTAs)
    -   Approximate USPS Code distribution for housing units
        -   The most frequently occurring zip code within an census block is assigned to a census block
        -   Then blocks are aggregated into areas (ZCTAs)
    -   ZCTAs do NOT nest within any other geographies
        -   I guess the aggregated ZCTA blocks can overlap block groups
    -   2010 ZCTAs exclude large bodies of water and unpopulated areas

## American Community Survey (ACS) {#sec-surv-cens-acs .unnumbered}

-   About
    -   Yearly estimates based on *samples* of the population over a 5yr period
        -   Therefore a Margin of Error (MoE) is included with the estimates.
    -   Detailed social, economic, housing, and demographic characteristics
    -   [census.gov/acs](http://census.gov/acs)
-   ACS Release Schedule ([releases](https://census.gov/programs-surveys/acs/news/data-releases.html))
    -   September - 1-Year Estimates (from previous year's collection)
        -   Estimates for areas with populations of \>65K
    -   October - 1-Year Supplemental Estimates
        -   Estimates for areas with populations between 20K-64999
    -   December - 5-Year Estimates
        -   Estimates for areas including census tract and block groups
-   Data Collected
    -   Population
        -   Social
            -   Ancestry, Citizenship, Citizen Voting AgeÂ  Population, Disability, Education Attainment, Fertility, Grandparents, Language, Marital Status, Migration, School Enrollment, Veterans
        -   Demographic
            -   Age, Hispanic Origin, Race, Relationship, Sex
        -   Economic
            -   Class of worker, Commuting, Employment Status, Food Stamps (SNAP), Health Insurance, Hours/Week, Weeks/Year, Income, Industry & Occupation
    -   Housing
        -   Computer & Internet Use, Costs (Mortgage, Taxes, Insurance), Heating Fuel, Home Value, Occupancy, Plumbing/Kitchen Facilities, Structure, Tenure (Own/Rent), Utilities, Vehicles, Year Built/Year Movied In

## Dicennial US Census {#sec-surv-cens-dic .unnumbered}

### Misc {#sec-surv-cens-dic-misc .unnumbered}

-   A complete count and not based on samples like the ACS
-   Applies differential privacy to preserve respondent confidentiality
    -   Adds noise to data. Greater effect at lower levels (i.e. block level)
    -   The exception is that is no differetial privacy for household-level data.

### PL94-171 {#sec-surv-cens-dic-pl .unnumbered}

-   Population data which the government needs for redistricting

-   [sumfile = "pl"]{.arg-text}

-   State Populations

    ``` r
    pop20 <- 
      get_decennial(
        geography = "state",
        variables = "P1_001N",
        year = 2020
      )
    ```

    -   For 2020, default is [sumfile = "pl"]{.arg-text}

### DHC {#sec-surv-cens-dic-dhc .unnumbered}

-   Age, Sex, Race, Ethnicity, and Housing Tenure (most popular dataset)

-   [sumfile = "dhc"]{.arg-text}

-   County

    ``` r
    tx_population <- 
      get_decennial(
        geography = "county",
        variables = "P1_001N",
        state = "TX",
        sumfile = "dhc",
        year = 2020
      )
    ```

-   Census Block (analogous to a city block)

    ``` r
    matagorda_blocks <- 
      get_decennial(
        geography = "block",
        variables = "P1_001N",
        state = "TX",
        county = "Matagorda",
        sumfile = "dhc",
        year = 2020
      )
    ```

### Demographic Profile {#sec-surv-cens-dic-dp .unnumbered}

-   Pretabulated percentages from dhc

-   `sumfile = "dp"`

-   C suffix variables is counts while P suffix variables are percentages

    -   0.4 is 0.4% not 40%

-   [Example]{.ribbon-highlight}: Same-sex married and partnered in California by County

    ``` r
    ca_samesex <- 
      get_decennial(
        geography = "county",
        state = "CA",
        variables = c(married = "DP1_0116P",
                      partnered = "DP1_0118P"),
        year = 2020,
        sumfile = "dp",
        output = "wide"
      )
    ```

-   Tabulations for 118th Congress and Island Areas (i.e. congressional districts)

    -   `sumfile = "cd118"`

### Detailed DHC-A {#sec-surv-cens-dic-dhca .unnumbered}

-   Detailed demographic data; Thousands of racial and ethnic groups; Tabulation by sex and age.

-   Different groups are in different tables, so specific groups can be hard to locate.

-   Adaptive design means the demographic group (i.e. variable) will only be available in certain areas. For privacy, data gets supressed where the area has low population.

    -   Considerable sparsity especially when going down census tract

-   Args

    -   [sumfile = "ddhca"]{.arg-text}
    -   [pop_group]{.arg-text} - Population group code (See `get_pop_groups` below)
        -   ["all"]{.arg-text} for all groups
        -   [pop_group_label = TRUE]{.arg-text} - Adds group labels

-   `get_pop_groups(2020, "ddhca")` - Gets group codes for ethnic groups

    -   For various groups there could be at least two variable (e..g Somaili, Somali and any combination)
    -   For time series analysis, analagous groups for 2000 is SF2/SF4 and for 2010 is SF2. (SF stands for Summary File)

-   `check_ddhca_groups` - Checks which variables are available for a specific group

    -   [Example]{.ribbon-highlight}: Somali

        ``` r
        check_ddhca_groups(
          geography = "county", 
          pop_group = "1325", 
          state = "MN", 
          county = "Hennepin"
        )
        ```

-   [Example]{.ribbon-highlight}: Minnesota group populations

    ``` r
    load_variables(2020, "ddhca") %>% 
      View()
    mn_population_groups <- 
      get_decennial(
        geography = "state",
        variables = "T01001_001N", # total population
        state = "MN",
        year = 2020,
        sumfile = "ddhca",
        pop_group = "all", # for all groups
        pop_group_label = TRUE
      )
    ```

    -   Includes aggregate categories like European Alone, Other White Alone, etc., so you can't just aggregate the value column to get the total population in Minnesota.
        -   So, in order to calculate ethnic group ratios of the total state or county, etc. population, you need to those state/county totals from other tables (e.g. PL94-171)

-   Use dot density and not chloropleths to visualize these sparse data

    -   [Example]{.ribbon-highlight}: Somali populations by census tract in Minneapolis\
        ![](_resources/Surveys,_Census_Data.resources/dhca-somali-dot-1.png){.lightbox width="532"}

        ``` r
        hennepin_somali <- 
          get_decennial(
            geography = "tract",
            variables = "T01001_001N", # total population
            state = "MN",
            county = "Hennepin",
            year = 2020,
            sumfile = "ddhca",
            pop_group = "1325", # somali
            pop_group_label = TRUE,
            geometry = TRUE
          )

        somali_dots <- 
          as_dot_density(
            hennepin_somali,
            value = "value", # column name which is by default, "value"
            values_per_dot = 25
          )

        mapview(somali_dots, 
                cex = 0.01, 
                layer.name = "Somali population<br>1 dot = 25 people",
                col.regions = "navy", 
                color = "navy")
        ```

        -   [values_per_dot = 25]{.arg-text} says make each dot worth 25 units (e.g. people or housing units)

### Time Series Analysis {#sec-surv-cens-dic-tsa .unnumbered}

-   [{tidycensus}]{style="color: #990000"} only has 2010 and 2020

    -   See <https://nhgis.org> for previous census values

-   Issue: county names and boundaries change (e.g. Alaska redraws a lot)

    -   Census gives a different GeoID to counties that rename even though they're it's the same county
    -   NA values showing up after you calculate how the value changes over time is a good indication of this problem: `filter(county_change, is.na(value10))`

-   [Example]{.ribbon-highlight}: Join 2010 and 2020

    ``` r
    county_pop_10 <- 
      get_decennial(
        geography = "county",
        variables = "P001001", 
        year = 2010,
        sumfile = "sf1"
      )

    county_pop_10_clean <- 
      county_pop_10 %>%
        select(GEOID, value10 = value) 

    county_pop_20 <- 
      get_decennial(
        geography = "county",
        variables = "P1_001N",
        year = 2020,
        sumfile = "dhc"
      ) %>%
        select(GEOID, NAME, value20 = value)

    county_joined <- 
      county_pop_20 %>%
        left_join(county_pop_10_clean, by = "GEOID") 

    county_joined

    county_change <- 
      county_joined %>%
        mutate( 
          total_change = value20 - value10, 
          percent_change = 100 * (total_change / value10) 
        ) 
    ```

-   [Example]{.ribbon-highlight}: Age distribution over time in Michigan\
    ![](_resources/Surveys,_Census_Data.resources/michigan-age-chart-1.png){.lightbox width="432"}

    -   Code available in the github [repo](https://github.com/walkerke/umich-workshop-2024/blob/main/census-2020/bonus-chart.R) or R/Workshops/tidycensus-umich-workshop-2024-main/census-2020/bonus-chart.R
    -   Distribution shape remains pretty much the same but decreasing for most age cohorts.
        -   e.g. The large hump representing the group of people in there mid-40s in 2000 steadily decreases over time.

## tidycensus {#sec-surv-cens-dic-tidyc .unnumbered}

-   Get an API key

    -   Request a key, then activate the key from the link in your email.(<https://api.census.gov/data/key_signup.html>)
    -   Set as an environment variable: `census_api_key("<api key>", install = TRUE)`
        -   Or add this line to [.Renviron]{.arg-text} file, [CENSUS_API_KEY='\<api key']{.arg-text}

-   Search Variables

    -   Columns

        -   [Name]{.arg-text} - ID of the variable (Use this in the survey functions)
        -   [Label]{.arg-text} - Detailed description of the variable
        -   [Context]{.arg-text} - Subject of the table that the variable is located in.

    -   Prefixes (Variables can have combinations of prefixes)

        -   [P]{.arg-text}: i.e. Person; Data available at the census block and larger
        -   [CT]{.arg-text}: Data available at the census track and larger
        -   [H]{.arg-text}: Data available at the Housing Unit level
            -   I think housing unit is an alternatve unit. So instead of the unit being a person, which I assume is the typical unit, it's a housing unit (\~family).

            -   Not affected by Differential Privacy (i.e. no noise added; true value)

            -   [Example]{.ribbon-highlight}: Total Deleware housing units at census block level

                ``` r
                dp_households <- 
                      get_decennial(
                            geography = "block",
                            variables = "H1_001N",
                            state = "DE",
                            sumfile = "dhc",
                            year = 2020
                      )
                ```

    -   [Example]{.ribbon-highlight}: DHC data in census for 2020\
        ![](_resources/Surveys,_Census_Data.resources/search-vars-1.png){.lightbox width="432"}

        ``` r
        vars <- load_variables(2020, "dhc")

        View(vars)
        ```

        -   View table, click filter, and then search for parameters (e.g. Age, Median, etc.) with the Label, Context boxes, and overall search box

-   [summary_var]{.arg-text} - Argument for supplying an additional variable that you need to calculate some kind of summary statistic

    -   [Example]{.ribbon-highlight}: Race Percentage per Congressional District

        ``` r

        race_vars <- c(
          Hispanic = "P5_010N", # all races identified as hispanic
          White = "P5_003N", # white not hispanic
          Black = "P5_004N", # black not hispanic
          Native = "P5_005N", # native american not hispanic
          Asian = "P5_006N", # asian not hispanic
          HIPI = "P5_007N" # hawaiian, islander not hispanic
        )

        cd_race <- 
          get_decennial(
            geography = "congressional district",
            variables = race_vars,
            summary_var = "P5_001N", # total population for county
            year = 2020,
            sumfile = "cd118"
        )

        cd_race_percent <- 
          cd_race %>%
            mutate(percent = 100 * (value / summary_value)) %>% 
            select(NAME, variable, percent)
        ```

-   [geometry = TRUE]{.arg-text}- Joins shapefile with data and returns a SF (Simple Features) dataframe for mapping

    -   Misc

        -   You can create a discrete color palette with the [at]{.arg-text} argument in the `mapview` function.
            -   [Example]{.ribbon-highlight}

                ``` r
                # check min and max of your data to select range of bins
                min(iowa_over_65, na.rm = TRUE) # 0
                max(iowa_over_65, na.rm = TRUE) # 38.4

                m1 <- 
                  mapview(iowa_over_65, 
                          zcol = "value",
                          layer.name = "% age 65 and up<br>Census tracts in Iowa",
                          col.regions = inferno(100, direction = -1),
                          at = c(0, 10, 20, 30, 40))
                ```

                -   This will result in a discrete palette with bins of 0-10, 10-20, etc. Looks like an overlap, so I'm sure which bin contains the endpoints.

    -   [Example]{.ribbon-highlight}: Over 65 in Iowa by census tract\
        ![](_resources/Surveys,_Census_Data.resources/tidycensus-iowa-65-1.png){.lightbox width="432"}

        ``` r
        library(mapviw); library(viridisLite)

        iowa_over_65 <- 
          get_decennial(
            geography = "tract",
            variables = "DP1_0024P",
            state = "IA",
            geometry = TRUE,
            sumfile = "dp",
            year = 2020
          )
        m1 <- 
          mapview(iowa_over_65, zcol = "value",
                  layer.name = "% age 65 and up<br>Census tracts in Iowa",
                  col.regions = inferno(100, direction = -1))
        ```

    -   Export as an HTML file

        ``` r
        htmlwidgets::saveWidget(m1@map, "iowa_over_65.html")
        ```

        -   Can embed it elsewhere (html report or website) by adding it as an asset
