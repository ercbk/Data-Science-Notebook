# html, css

HTML

* Notes
	* Some JS libraries use custom attributes in html tags that have hypens in their name. R hates hypens, but you can just put the attribute name in quotes and it works.

```
        # see data-sub-html
        tags$a(
              href = paste0("images/gallery/large/", l),
              "data-sub-html" = "<h4>Photo by - <a href='https://unsplash.com/@entrycube' >Diego Guzmán </a>",
              tags$img(src = paste0("images/gallery/thumbnails/", t))
            )
```

* glue("<b style='background-color:{color}; font-family:Roboto; font-size:15px'>{value}</b>")
	* color and value are variables
* glue("<b style= 'font-family:Roboto; font-size:15px'>[{name}]{style='color: #990000'}</br>Combined Indicator</b>: {value\_text}")
	* name and value\_text are variables
* html coment - <!-- comment -->
* `withTags` - Instead of needing to specify tags each time a tag function is used, as in tags$div() and tags$p(), code inside withTags is evaluated with tags searched first, so you can simply use div() and p().
* `tagList` - takes a list of tag objects and combines them into html code
* Example:
	* html

```
        <!---- withTags part ---->
        <div class="row" id="lightgallery">
          <!---- tagsList part ---->
          <a href="_gallery/img/images/gallery/large/excess-death-col.png">
            <img src="_gallery/img/images/gallery/thumbnails/thumb-excess-death-col.png"/>
          </a>
          <a href="_gallery/img/images/gallery/large/pos-policy-one-2021-06-20.png">
            <img src="_gallery/img/images/gallery/thumbnails/thumb-pos-policy-one-2021-06-20.png"/>
          </a>
        </div>
```

* htmltools

```
        # 1. create list of tags
        # images_thumb, images_full_size are paths to png files
        moose <- purrr::map2(images$images_thumb, images$images_full_size, function(t, l) {
            tags$a(
              href = paste0("_gallery/img/", l),
              tags$img(src = paste0("_gallery/img/", t))
            )
          })       
        [[1]]
        <a href="_gallery/img/images/gallery/large/excess-death-col.png">
          <img src="_gallery/img/images/gallery/thumbnails/thumb-excess-death-col.png"/>
        </a>

        [[2]]
        <a href="_gallery/img/images/gallery/large/pos-policy-one-2021-06-20.png">
          <img src="_gallery/img/images/gallery/thumbnails/thumb-pos-policy-one-2021-06-20.png"/>
        </a>


        # 2. convert list of tags to code with tagsList
        squirrel <- tagsList(moose)       
        <a href="_gallery/img/images/gallery/large/excess-death-col.png">
          <img src="_gallery/img/images/gallery/thumbnails/thumb-excess-death-col.png"/>
        </a>
        <a href="_gallery/img/images/gallery/large/pos-policy-one-2021-06-20.png">
          <img src="_gallery/img/images/gallery/thumbnails/thumb-pos-policy-one-2021-06-20.png"/>
        </a>


        # 3. insert into a div frame with withTags
        withTags(
          div(
            class = "row",
            id = "lightgallery",
            squirrel
          )
        )       
        <div class="row" id="lightgallery">
          <a href="_gallery/img/images/gallery/large/excess-death-col.png">
            <img src="_gallery/img/images/gallery/thumbnails/thumb-excess-death-col.png"/>
          </a>
          <a href="_gallery/img/images/gallery/large/pos-policy-one-2021-06-20.png">
            <img src="_gallery/img/images/gallery/thumbnails/thumb-pos-policy-one-2021-06-20.png"/>
          </a>
        </div>
```

CSS
![](./_resources/html,_css.resources/selectors.png)

* Resources
	* https://css-tip.com/
* [Widget](https://neumorphism.io/#e0e0e0) testing parameter values for css styling a div box
* css comment - /\* comment \*/
* selector formats
	* #<class>.<id><additional-stuff>

```
        #header.fluid-row::before{
        }
```

* <div class="fluid-row" id="header"> == $0
	::before
	</div>
	

* Include css styling directly into a html page

```
1.
<style>
body {
  padding: 50px 25px 0px 25px;
  font-family: 'Roboto', sans-serif;
  font-size: 19px;
}
</style>
# or maybe via R code chunk
# Add a custom font from Google Fonts
```
htmltools::tags$link(href = "https://fonts.googleapis.com/css2?family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&display=swap",
                    rel = "stylesheet")
```

2.
<style type='text/css'>
  .my-legend .legend-title {
    text-align: left;
    margin-bottom: 8px;
    font-weight: bold;
    font-size: 90%;
    }
  .my-legend .legend-scale ul {
    margin: 0;
    padding: 0;
    float: left;
    list-style: none;
    }
  .my-legend .legend-scale ul li {
    display: block;
    float: left;
    width: 50px;
    margin-bottom: 6px;
    text-align: center;
    font-size: 80%;
    list-style: none;
    }
  .my-legend ul.legend-labels li span {
    display: block;
    float: left;
    height: 15px;
    width: 50px;
    }
  .my-legend .legend-source {
    font-size: 70%;
    color: #999;
    clear: both;
    }
  .my-legend a {
    color: #777;
    }
</style>

```

* css navbar styling

```
.navbar-inverse {
  background-color: #000000;
  border-color: #000000;
  font-family: 'Roboto', sans-serif;
}
```

* css import font (copied from google fonts site)

```
@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,400;0,700;1,400&display=swap');
```

* Equal Column Widths![](./_resources/html,_css.resources/image.png)
* 






