# gtable package

gtable

Tools to make it easier to work with "tables" of 'grobs'. Undergirds ggplot2.

Notes

* Example below is a typical ggplot scatterplot
* The layout plot is jacked-up but you can still make out some coordinates
	* 1st coordinate: is up and down **Above** the **center** cell, (7,5) is (6,5) and **below** is (8,5)
	* 2nd coordinate is left and right. **Left** of the center cell is (7,4) and **right** is (7,6)

```
grob_obj <- ggplotGrob() or tableGrob(), etc.
gtable_show_layout(grob_obj)
```

* ![](./_resources/gtable_package.resources/unknown_filename.3.png|1024x0]]
* layout dataframe with t, l, b, r coordinates
	* t = top, l = left, b = bottom, r = right
		* see Add line plot grob, then table grob section below for details on how this works

```
layout_df <- grob_obj$layout
```

* outputs a data.frame of cell coordinates for each grob of the graph
* the (7,5) cell above is called the "panel" grob (which is where the points of scatter plot go)
	* In layout\_df, it has cell coordinates t = 7, l = 5, b = 7, r = 5
	* Except for the background grob, all grobs repeat the 2 coordinates
		* e.g. y-axis ("axis-l") grob is 7,4,7,4
		* I think if one pair either t and l or b and r have different coordinates then the grob overlaps cells

* Better example: adding a table to a line plot
	* create the grobs for the table and line plot
	* Imagine your grid layout
		* I want the table a litte right of the y-axis and around the middle in terms of the height
		* The goal is to carve out a cell in the layout to place your table into
			* 3 Rows: above the table is one row, the table itself is the second row and below the table is a third row
			* 3 Columns: left of the table is a column, the table itself is the second column, and right of the table is the third column
	* Specify the proportions of each row and column

```
g_tab <- gtable(widths = unit(c(0.4, 0.6, 2), "null"), heights = unit(c(0.8, 0.4, 1), "null"))
```

* widths: widths of the columns
	* Specifying 3 units for the total width
	* 0.4 will include the y-axis and a little more
	* 0.6 is the width of the cell for my table
	* 2 is for the rest of the graph
	* "null" just means no units like "cm" or "in" is used
	* (from left to right) number describe columns from left to right
* heights: heights of rows
	* similar explanations as for widths
	* (from left to right) numbers describe rows from top to bottom

* Add line plot grob, then table grob

```
g_tab <- gtable_add_grob(g_tab, plot_grob, t = 1, b = 3, l = 1, r = 3)
```

* order matters, so add the plot\_grob first
	* there's also a "z" arg that can be used to specify the order you want them layered
* the first grob added spans the layout
	* unless you adding complicated shit like in the scatterplot example above. Then you'd add this to the "panel" cell
	* So we have 3 rows, therefore t(top) = 1, b (bottom) = 3 spans the height of the layout
	* And we have 3 columns, so l (left) = 1, r (right) = 3 spans the width of the layout

```
gtable_show_layout(g_tab)
```

* Check out the layout and make sure which cell you want your table in
	* ![](./_resources/gtable_package.resources/unknown_filename.png|1024x0]]
	* Then add the table grob to that cell

```
g_tab <- gtable_add_grob(g_tab, tab_grob, t = 2, l = 2)
```

* only need t and l or b and r to specify the location.
	* Both sets are the same since you're specifying only one cell
		* e.g. if you wanted to span the 2 middle left cells it'd be b = 2, t = 2, l = 1, r = 2

* Check it out

```
grid::grid.draw(g_tab) or plot(g_tabb)
```

* ![](./_resources/gtable_package.resources/unknown_filename.1.png|1024x0]]
	* top-right annotation block is from ggforce using regular methods
* Save it with ggsave( )

```
ggsave("R/Projects/local-corona/plots/pos-plot-tbl-gtab.png", plot = g_tab, dpi = "print", width = 33, height = 20, units = "cm")
```

* pics may show something different than what in your view or plots pane. So may have to adjust

* More complicated example (layout not exactly the same in the script. Moved subtitle row to create a caption. See Indiana COVID-19 Tracker project for details)
	* add 2 tables to 2 line graphs to cells (4,2) and (4,5) along with a title and subtitle
	* ![](./_resources/gtable_package.resources/unknown_filename.2.png|1024x0]]

```
title_grob <- grobTree(rectGrob(gp = gpar(fill = "black")), textGrob("Indiana COVID-19", hjust = 3.75, gp = gpar(fontsize = 15, col = "white")))
subtitle_grob <- grobTree(rectGrob(gp = gpar(fill = "black")), textGrob(glue("Last updated: {label_dat$date[[1]]}"), hjust = 4.05, gp = gpar(fontsize = 10, col = "white")))

# construct layout
gtab <- gtable::gtable(widths = unit(c(0.4, 0.6, 1, 0.4, 0.6, 1), "null"), heights = unit(c(0.12, 0.08, 0.54, 0.43, 0.83), "null"))
# add plots
gtab <- gtable::gtable_add_grob(gtab, pos_plot_grob, t = 3, b = 5, l = 1, r = 3)
gtab <- gtable::gtable_add_grob(gtab, dea_plot_grob, t = 3, b = 5, l = 4, r = 6)
# add titles
gtab <- gtable::gtable_add_grob(gtab, title_grob, t = 1, b = 1, l = 1, r = 6)
gtab <- gtable::gtable_add_grob(gtab, subtitle_grob, t = 2, b = 2, l = 1, r = 6)

# find cell coordinates to place tables
# gtable::gtable_show_layout(gtab)

# add tables, only need two coord since we don't want to table to span more than one cell
gtab <- gtable::gtable_add_grob(gtab, pos_tab_grob, t = 4, l = 2)
gtab <- gtable::gtable_add_grob(gtab, dea_tab_grob, t = 4, l = 5)

# grid.draw(gtab)
# grid.newpage()

```

* ![](./_resources/gtable_package.resources/2020-04-02.png|3897x0]]
* 
* 



