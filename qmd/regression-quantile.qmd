# Quantile {#sec-reg-quant .unnumbered}

## Misc {#sec-reg-quant-misc .unnumbered}

-   Used to estimate the conditional quantiles of a target variable

    -   [Example]{.ribbon-highlight}: Assume we have a quantile regression model predicting the demand for apples tomorrow. Our model forecasts the 90th quantile as 100, which means that according to the model, there is a 90% probability that the actual demand will be 100 or lower.

-   Also see

    -   [Loss Functions \>\> Quantile Loss](loss-functions.qmd#sec-lossfun-quant){style="color: green"}

-   Resources

    -   Handbook of Quantile Regression - Koenker ([{quantreg}]{style="color: #990000"} book) (see R \>\> Documents \>\> Regression)

-   Packages

    -   [{]{style="color: #990000"}[quantregRanger](https://cran.r-project.org/web/packages/quantregRanger/quantregRanger.pdf){style="color: #990000"}[}]{style="color: #990000"} - uses Ranger to fit quantile RFs
        -   In [{tidymodels}]{style="color: #990000"}, `quantreg = TRUE` tells ranger that you're estimating quantiles rather than averages. Also `predict(airquality, type = 'quantiles')`
    -   [{]{style="color: #990000"}[grf](https://grf-labs.github.io/grf/reference/quantile_forest.html){style="color: #990000"}[}]{style="color: #990000"} - generalized random forest
    -   [{]{style="color: #990000"}[quantreg](https://cran.r-project.org/web/packages/quantreg/index.html){style="color: #990000"}[}]{style="color: #990000"} - Estimation and inference methods for models for conditional quantile functions: Linear and nonlinear parametric and non-parametric (total variation penalized) models for conditional quantiles of a univariate response.
    -   [{]{style="color: #990000"}[partykit](https://cran.r-project.org/web/packages/partykit/index.html){style="color: #990000"}[}]{style="color: #990000"} - conditional inference trees; model-based recursive partitioning trees
        -   [{]{style="color: #990000"}[bonsai](https://bonsai.tidymodels.org/){style="color: #990000"}[}]{style="color: #990000"}: tidymodels partykit conditional trees, forests; successor to treesnip - Model Wrappers for Tree-Based Models
    -   [{{]{style="color: goldenrod"}[quantile-forest](https://github.com/zillow/quantile-forest){style="color: goldenrod"}[}}]{style="color: goldenrod"} - Zillow's sklearn compatible quantile forest. Compared to other python implementations, optimized for training and inference speed, enabling it to scale to millions of samples with a runtime that is orders of magnitude faster than less-optimized solutions. It also allows specifying prediction quantiles after training, permitting a trained model to be reused to estimate conditional quantiles as needed.
        -   Out-of-Bag Scoring: OOB scoring can be used to obtain unbiased estimates of prediction errors and quantile-specific metrics without the need for additional validation datasets.
        -   Quantile Rank Calculation: Provide a measure of relative standing for each data point in the distribution. Allows you to compare and rank observations based on their position within the quantile distribution, providing valuable insights for various applications, such as risk assessment and anomaly detection.
        -   Proximity and Similarity Estimation: Quantifies the similarity between pairs of observations based on their paths through the forest. Useful for clustering, anomaly detection, and identifying influential observations.
    -   [{{]{style="color: goldenrod"}[skgarden](https://scikit-garden.github.io/examples/QuantileRegressionForests/){style="color: goldenrod"}[}}]{style="color: goldenrod"} - Extension for sklearn tree and forest models. Produces online training models called Mondrian Forests ([paper](https://arxiv.org/abs/1406.2673)). Has a quantile random forest flavor.
    -   [{]{style="color: #990000"}[qrnn](https://cran.r-project.org/web/packages/qrnn/index.html){style="color: #990000"}[}]{style="color: #990000"}: Quantile Regression Neural Network
        -   Fit quantile regression neural network models with optional left censoring, partial monotonicity constraints, generalized additive model constraints, and the ability to fit multiple non-crossing quantile functions.
    -   [{]{style="color: #990000"}[qrcm](https://cran.r-project.org/web/packages/qrcm/index.html){style="color: #990000"}[}]{style="color: #990000"} - A parsimonious parametric approach that directly models the linear regression coefficients as smooth functions of q, which succeeds in effectively pooling information across quantile levels. It also estimates different quantile coefficients *simultaneously*.
        -   Note that Quantile RFs *simulaneously* estimate the entire conditional distribution
        -   Benefits of Simultaneous Estimation:
            -   Computational Efficiency: Reduces overall computation time compared to fitting each quantile separately.
            -   No Quantile Crossing: Crossing violates the basic principle that higher quantiles should always have higher values than lower quantiles for any given set of predictor variables. This also violates the fundamental properties of cumulative distribution functions, which should be monotonically increasing.
            -   Improved Stability: The joint estimation can lead to more stable estimates, especially in smaller samples or when dealing with extreme quantiles. In regions where data is sparse, borrowing information across quantiles can lead to more robust estimates.
            -   Enhanced inference: Simultaneous estimation allows for easier joint hypothesis testing across multiple quantiles.
    -   [{]{style="color: #990000"}[qrcmNP](https://cran.r-project.org/web/packages/qrcmNP/index.html){style="color: #990000"}[}]{style="color: #990000"} - Uses the method in [{qrcm}]{style="color: #990000"} for nonlinear and penalized parametric modeling of quantile regression coefficient functions.
    -   [{]{style="color: #990000"}[fastkqr](https://cran.r-project.org/web/packages/fastkqr/index.html){style="color: #990000"}[}]{style="color: #990000"} ([paper](https://arxiv.org/abs/2408.05393)) - A Fast Algorithm for Kernel Quantile Regression
        -   Efficient algorithm to fit and tune kernel quantile regression models based on the majorization-minimization (MM) method.
        -   Fits multiple quantile curves simultaneously without crossing.
    -   [{]{style="color: #990000"}[rquest](https://cran.r-project.org/web/packages/rquest/index.html){style="color: #990000"}[}]{style="color: #990000"} - Functions to conduct hypothesis tests and derive confidence intervals for quantiles, linear combinations of quantiles, ratios of dependent linear combinations and differences and ratios of all of the above for comparisons between independent samples. Additionally, quantile-based measures of inequality are also considered.

-   For quantiles \> 0.80, see quantile models in [Extreme Value Theory (EVT)](extreme-value-theory-(evt).qmd#sec-evt){style="color: green"}

    -   Quantile Loss is not effective at predicting tail events

-   [Harrell](http://hbiostat.org/bbr/nonpar.html#sec-nonpar-ecdf): To characterize an entire distribution or in other words, have a "high degree of confidence that no estimated quantile will be off by more than a probability of 0.01, n = 18,400 will achieve this.

    -   For example, with n = 18,400, the sample 0.25 quantile (first quartile) may correspond to population quantiles 0.24-0.26.

    -   To achieve a $\pm$ 0.1 MOE requires n = 180, and to have $\pm$ 0.05 requires n = 730 (see table)

        ``` r
        #>        n   MOE
        #> 1     20 0.294
        #> 2     50 0.188
        #> 3    100 0.134
        #> 4    180 0.100
        #> 5    250 0.085
        #> 6    500 0.060
        #> 7    730 0.050
        #> 8    750 0.049
        #> 9   1000 0.043
        #> 10  2935 0.025
        #> 11  5000 0.019
        #> 12 10000 0.014
        #> 13 18400 0.010
        ```

-   Harrell has a pretty cool text effect to display quantile values in his {HMisc::describe} that uses [{gt}]{style="color: #990000"} under the hood (See [EDA \>\> Packages](eda-general.qmd#sec-eda-gen-pkgs){style="color: green"} \>\> HMisc)

    ![](./_resources/Regression,_Quantile.resources/Screenshot%20(1434).png){.lightbox width="532"}

    -   Histogram is a sparkline
