# ggplot2 {#sec-vis-ggplot .unnumbered}

## Misc {#sec-vis-ggplot-misc .unnumbered}

-   Packages

    -   [{{]{style="color: goldenrod"}[brand_yml](https://posit-dev.github.io/brand-yml/){style="color: goldenrod"}[}}]{style="color: goldenrod"} - Create reports, apps, dashboards, plots and more that match your company’s brand guidelines with a single `_brand.yml` file

        -   For Quarto dashboards, websites, reports, etc.
        -   For Python shiny, seaborn, matplotlib, etc.
        -   For R shiny, ggplot2, plot, RMarkdown

-   Resources

    -   [Docs](https://ggplot2.tidyverse.org/), [Aesthetic Specifications](https://ggplot2.tidyverse.org/articles/ggplot2-specs.html), [A Complete Guide to Scales](https://ggplot2tor.com/scales/)

    -   [ggplot2: Elegant Graphics for Data Analysis](https://ggplot2-book.org/) (Wickam, Navarro, Pederson)

    -   [Modern Data Visualization with R](https://rkabacoff.github.io/datavis/)

    -   [R Graphics Cookbook](https://r-graphics.org/)

-   Don't use stat calculating geoms *and* set axis limits with scale_y_continuous\
    ![](./_resources/Visualization.resources/FTCVXwJXsAElSDd.png){.lightbox width="219"}

    -   See examples of the behavior in this [thread](https://twitter.com/CedScherer/status/1526878907949010944)

-   Defaults for any {ggplot2} geom using the default_aes field (i.e. `GeomBlah$default_aes` )

-   Basic Function

    ``` r
    viz_monthly <- function(df, y_var, threshhold = NULL) {

      ggplot(df) +
        aes(
          x = .data[["day"]],
          y = .data[[y_var]]
        ) +
        geom_line() +
        geom_hline(yintercept = threshhold, color = "red", linetype = 2) +
        scale_x_continuous(breaks = seq(1, 29, by = 7)) +
        theme_minimal()
    }
    ```

-   FIltering Data in Geoms ([source](https://aus.social/@jimjamslam/112765205553727899))

    ``` r
    mtcars |> 
      rownames_to_column() |> 
      ggplot(aes(mpg, hp)) +
      geom_point() +
      geom_label(
        aes(label = rowname),
        data = ~slice_max(.x,
                          hp,
                          n = 2),
        nudge_x = 3
      )
    ```

-   Dynamic Axis Limits ([source](https://github.com/gorinsimon/user2024-talks-files/blob/main/attached_files/20_Parametrized%20Nice%20Reports%20with%20Quarto%20and%20PDF.pdf))

    ``` r
    ggplot(...) +
      ... +
      scale_x_continuous(
        breaks = seq(2021, 2023, 1),
        limits = c(min(df$year) - .1, max(df$year) + .1),
        position = "top",
        labels = c("Baseline", "2022", "2023")
      )
    ```

## Themes {#sec-vis-ggplot-themes .unnumbered}

-   Docs

    -   [Theme elements](https://ggplot2.tidyverse.org/reference/theme.html)

-   Theme Elements Cheatsheet ([source](https://isabella-b.com/blog/ggplot2-theme-elements-reference/))\
    ![](_resources/Visualization.resources/ggplot2-theme-elements-reference-v2.png){.lightbox width="632"}

-   Transparent Background

    ``` r
    p +
      theme(
        panel.background = element_rect(fill='transparent'), #transparent panel bg
        plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
        panel.grid.major = element_blank(), #remove major gridlines
        panel.grid.minor = element_blank(), #remove minor gridlines
        legend.background = element_rect(fill='transparent'), #transparent legend bg
        legend.box.background = element_rect(fill='transparent') #transparent legend panel
      )
    ggsave('myplot.png', p, bg='transparent')
    ```

-   `theme_notebook`

    ``` r
    theme_notebook <- function(...) {
      theme_minimal() %+replace%
        theme(
          panel.background = element_rect(fill='#FFFDF9FF'),
          panel.grid.minor = element_blank(),
          plot.background = element_rect(fill='#FFFDF9FF', color=NA),
          legend.background = element_rect(fill='#FFFDF9FF'),
          legend.box.background = element_rect(fill='#FFFDF9FF'),
          ...
        )
    }
    ```

-   Cedric Sherer ([article](https://www.cedricscherer.com/2023/07/05/efficiency-and-consistency-automate-subset-graphics-with-ggplot2-and-purrr/))

    ``` r
    theme_set(theme_minimal(base_size = 15, base_family = "Anybody"))
    theme_update(
      axis.title.x = element_text(margin = margin(12, 0, 0, 0), color = "grey30"),
      axis.title.y = element_text(margin = margin(0, 12, 0, 0), color = "grey30"),
      panel.grid.minor = element_blank(),
      panel.border = element_rect(color = "grey45", fill = NA, linewidth = 1.5),
      panel.spacing = unit(.9, "lines"),
      strip.text = element_text(size = rel(1)),
      plot.title = element_text(size = rel(1.4), face = "bold", hjust = .5),
      plot.title.position = "plot"
    )
    ```

-   Eric Bickel

    ``` r
    ggplot2::theme_set(
      theme_bw(base_size = 12) +
        theme(
              plot.title = element_text(face = 'bold', hjust = 0),
              text = element_text(colour = '#4e5c65'),
              panel.background = element_rect('#ffffff'),
              strip.background = element_rect('#ffffff', colour = 'white'),
              plot.background = element_rect('#ffffff'),
              panel.border = element_rect(colour = '#ffffff'),
              panel.grid.major.x = element_blank(),
              panel.grid.major.y = element_blank(),
              panel.grid.minor.y = element_blank(),
              legend.background = element_rect('#ffffff'),
              legend.title = element_blank(),
              legend.position = 'right',
              legend.direction = 'vertical',
              legend.key = element_blank(),
              strip.text = element_text(face = 'bold', size = 10),
              axis.text = element_text(face = 'bold', size = 9),
              axis.title = element_blank(),
              axis.ticks = element_blank()
        )
    ```
