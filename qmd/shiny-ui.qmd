---
fig-cap-location: top
---

# UI {#sec-shiny-ui .unnumbered}

## Misc {#sec-shiny-ui-misc .unnumbered}

-   Packages
    -   [{{]{style="color: goldenrod"}[brand_yml](https://posit-dev.github.io/brand-yml/){style="color: goldenrod"}[}}]{style="color: goldenrod"} - Create reports, apps, dashboards, plots and more that match your company’s brand guidelines with a single `_brand.yml` file
        -   For Quarto dashboards, websites, reports, etc.
        -   For Python shiny, seaborn, matplotlib, etc.
        -   For R shiny, ggplot2, plot, RMarkdown
-   Resources
    -   [Outstanding User Interfaces with Shiny](https://unleash-shiny.rinterface.com/)

## Design Principles {#sec-shiny-ui-desprin .unnumbered}

-   Misc
    -   Notes from
        -   Erik Kennedy [thread](https://twitter.com/erikdkennedy/status/1610371533784100864)
-   De-Emphasize Dividing lines\
    ![](./_resources/Shiny,_UI.resources/FlkuYkMaEAAT7mp.png){.lightbox width="532"}
-   Use fonts that subtly convey brand\
    ![](./_resources/Shiny,_UI.resources/FlkucwRaUAAVn2J.png){.lightbox width="532"}
-   Content cards should be lighter than their bg (in dark mode too)\
    ![](./_resources/Shiny,_UI.resources/FlkvBDAaYAE8uw4.png){.lightbox width="532"}
-   Don’t resize icons\
    ![](./_resources/Shiny,_UI.resources/FlkvLX3aAAEBH3a.png){.lightbox width="532"}
    -   Their level of detail and stroke weights are meant to work best at a certain size.
    -   Instead, try adding a border or container around them for some extra visual pop
-   REMOVE-HIDE-LIGHTEN for cleaner designs\
    ![](./_resources/Shiny,_UI.resources/FlkvXLHaEAAY3Nl.png){.lightbox width="532"}
-   Be consistent until it's time not to be consistent\
    ![](./_resources/Shiny,_UI.resources/FlkvnxgaMAAUXoZ.png){.lightbox width="532"}
    -   Break consistency example: when you're trying to catch the user's eye
-   Good imagery\
    ![](./_resources/Shiny,_UI.resources/FlkvuG5aAAEnNnj.png){.lightbox width="532"}
-   Remove Congestion
    -   See [Designing Accessible Research with R/Shiny UI – Part 2](https://www.r-bloggers.com/2023/01/designing-accessible-research-with-r-shiny-ui-part-2/) for an example of an iterable workflow
    -   Congestion is when an app shows everything, all at once and that’s stressful for the user. It doesn’t elicit the behavior we want for an engaging, learning experience.
    -   This stress triggers two subconscious actions – run or freeze. Both lead to cognitive load and negative perception, and ultimately, failed adoption.
        -   Running is expressed in bounce rate. A user will enter the app, become frustrated, and leave.
        -   Freezing means that a user pauses with a delayed time to understand. This can be expressed in a number of ways, but most likely a combination of longer session times with aimless user behavior.
    -   Minimize options, legends, etc. and move to the edges of the app (e.g. header, sides)
        -   [Example]{.ribbon-highlight}
            -   Prototype\
                ![](./_resources/Shiny,_UI.resources/image.png){.lightbox group="minmap" width="432"}
                -   Issues
                    -   The tree selector consumes space on the dashboard
                    -   Selecting via images doesn’t add a lot of value as not all tree species are easily identified by image
                    -   The UI is too dark
                    -   The visual accessibility feature was lost as some colors don’t work on a dark background
            -   Final
                -   Dashboard\
                    ![](./_resources/Shiny,_UI.resources/image.1.png){.lightbox group="minmap" width="432"}

                    -   The legend moved to the card (see mobile for more details
                        -   Tree card gives details about species and a summary
                        -   Clicking upper right icon flips the card to display the bar chart.
                    -   Switching languages and information about the application moved to the header (right side of blue nav bar)
                    -   Clicking text in header opens pop-up with options. One for type of tree and one for type of scenario (beteen blue nav bar and map)
                    -   All other interactive elements that were scattered on the screen are now organized into the right vertical panel on the map. Here is also the color blindness option for people with visual disabilities, as the main focus of the application is on the color ratio on the map

                -   Mobile\

                    ::: {layout-ncol="3"}
                    ![](./_resources/Shiny,_UI.resources/Screenshot%20(1199).png){.lightbox group="mobile" width="232"}

                    ![](./_resources/Shiny,_UI.resources/Screenshot%20(1198).png){.lightbox group="mobile" width="232"}

                    ![](./_resources/Shiny,_UI.resources/Screenshot%20(1200).png){.lightbox group="mobile" width="232"}
                    :::

                    -   “languages” and “about” moved to the top

## Style {#sec-shiny-ui-style .unnumbered}

-   Misc
    -   Images and style.css files should go into the "www" folder
-   Implementing a css file
    -   [Example]{.ribbon-highlight}: Basic\
        ![](./_resources/Shiny,_UI.resources/image.3.png){.lightbox width="432"}
        -   main.css file

            ``` css
            @import url('https://fonts.googleapis.com/css2?family=Poppins&display=swap');
            * {
              margin: 0;
              padding: 0;
              box-sizing: border-box;
              font-family: 'Poppins', sans-serif;
            }
            body {
              padding: 1rem;
            }
            #map {
              height: 98vh !important;
              border-radius: 0.5rem !important;
            }
            ```

        -   app.R

            ``` r
            ui <- fluidPage(
              tags$head(tags$link(rel = "stylesheet", type = "text/css", href = "main.css")),
              sidebarLayout(
                ...
              )
            )
            ```

## Responsiveness {#sec-shiny-ui-resp .unnumbered}

-   Responsiveness isn’t the same as performance. Performance is about completing an operation in the minimal amount of time, while responsiveness is about meeting human needs for feedback when executing an action

-   Misc

    -   Notes from [Improving the responsiveness of Shiny applications](https://www.r-bloggers.com/2023/01/improving-the-responsiveness-of-shiny-applications/)

-   Button Click Registered

    ::: {layout-ncol="3"}
    ![](./_resources/Shiny,_UI.resources/image.2.png){.lightbox group="butreg" width="132"}

    ![](./_resources/Shiny,_UI.resources/Screenshot%20(1210).png){.lightbox group="butreg" width="132"}

    ![](./_resources/Shiny,_UI.resources/Screenshot%20(1211).png){.lightbox group="butreg" width="132"}
    :::

    -   (Left) Default arrow for your app

    -   (Middle) Hand indicates to the user that the app has registered their hovering over a button

    -   (Right) Arrow + Pie indicates to the user that the app has registered their clicking the button

    -   (generic) entry into CSS file

        ``` css
        html.shiny-busy .container-fluid {
          cursor: wait;
        }
        ```

        -   Looks like this code is to produce something like the right-side image

-   For touch devices (i.e. without cursor), you might want to take a look at [{]{style="color: #990000"}[shinycssloaders](https://github.com/daattali/shinycssloaders){style="color: #990000"}[}]{style="color: #990000"} and/or [{]{style="color: #990000"}[waiter](https://shiny.john-coene.com/waiter/){style="color: #990000"}[}]{style="color: #990000"}

-   If the user might have to wait longer than a few seconds for the process they’ve just set in motion to complete, you should consider a progress indicator.

    -   [{]{style="color: #990000"}[shiny](https://shiny.rstudio.com/gallery/progress-bar-example.html){style="color: #990000"}[}]{style="color: #990000"} has a progress indicator, while [{]{style="color: #990000"}[waiter](https://shiny.john-coene.com/waiter/){style="color: #990000"}[}]{style="color: #990000"} also offers a nice built-in-to-button option

        ::: {layout-ncol="2"}
        ![](./_resources/Shiny,_UI.resources/Screenshot%20(1215).png){.lightbox group="progbut" width="132"}

        ![](./_resources/Shiny,_UI.resources/Screenshot%20(1216).png){.lightbox group="progbut" width="132"}
        :::
