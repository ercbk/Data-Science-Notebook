# Hosting {#sec-shiny-hosting .unnumbered}

## Misc {#sec-shiny-hosting-misc .unnumbered}

-   Packages

    -   [{]{style="color: #990000"}[shiny.exe](https://github.com/AODiakite/shiny.exe){style="color: #990000"}[}]{style="color: #990000"} ([article](https://ifeanyidiaye.medium.com/how-to-make-your-r-shiny-app-into-a-desktop-application-7cb07cb81e97)) - Create a standalone executable for your Shiny app

-   LLM apps

    -   Cloud-based online platforms

        -   Platforms like OpenAIâ€™s GPT4 store and Huggingface Space allow developers to focus on prompt engineering and interaction designing without configuring hardware, environment, and web framework. However, they have the following limitations:
            -   Privacy related to individual or commercial information.
            -   Latency due to remote servers and shared GPU resource pools.
            -   Cost for remote API calls or on-demand servers.

    -   Managed self-hosted applications

        -   Self-hosted applications relying on a managed stack or framework like Ollama+OpenWebUI offer ready-to-use templates for running various LLM applications locally. This solution draws attentions because the models like Llama 3 (8B) model can easily run on a PC with a 16G GPU. While the solution is limited by:
            -   Complexity in setup and maintenance.
            -   Inflexibility due to limited customization.

    -   Custom self-hosted applications

        -   To overcome the limitations of the managed self-hosted solution, an alternative is to create custom self-hosted applications, which use custom-built components across the stack.

-   Cloud Services

    -   Benefits
        -   Easy development
        -   Managed scaling
        -   Built-in security
        -   No infrastructure maintenance
        -   Logs and metrics
    -   Considerations
        -   Subscription Costs
        -   Internet connectivtiy required
        -   Potential data privacy concerns
        -   Limited customization
        -   Dependency on a third-party service

-   Benchmarks

    -   Overview ([source](https://hosting.analythium.io/how-to-pick-the-right-hosting-option-for-your-shiny-app/), [Interactive](https://hosting.analythium.io/assets/files/shiny-hosting-options.html))\
        ![](./_resources/Shiny,_Hosting.resources/image.png){.lightbox width="632"}
        -   Digital Ocean (DO), Virtual Machines (VMs)
        -   The "Total Cost" of ownership (USD/year) covers licensing fees and operating costs for the "Number of Apps" listed in the table.
        -   PaaS means platform-as-a-service, i.e. it is a fully managed system without you having to worry about the underlying infrastructure. This also means less control over the infrastructure, i.e. when it comes to choosing the data region where your app is served from.

-   Posit Connect \>\> ShinyProxy for scaling up even though its free ([article](https://www.r-bloggers.com/2023/01/shinyproxy-vs-posit-connect-benchmark-test-for-scaling-shiny-apps/))

-   Free options

    -   shinyapps.io, heroku, Fly.io
    -   Fly.io's free tier is your best option if you want the apps running 24/7 and under a secured custom domain (none of this is offered for Shinyapp.io and Heroku).
    -   Other options
        -   If you run out of free builds or usage limits, use multiple emails to create multiple free-tier accounts
        -   Build mulitple apps on the same docker image
    -   ShinyProxy
        -   Benefits
            -   Open source -- no subscription fee
            -   A wide range of Authorization options available (LDAP / Kerberos / SSO / SAML / Open ID / Keycloak / Social Media / Simple (flat file of users & passwords))
        -   Costs
            -   Higher implementation cost
            -   No product support, therefore there is no possibility of SLA guarantees
            -   The additional cost of post-implementation support
            -   The additional layer of complexity -- Docker/Kubernetes
            -   Long-term maintenance requiring a large workforce
    -   Shiny Server
        -   On-Prem
        -   Pros - open source
        -   Cons
            -   Must load it on the server
            -   Keep track of security patches
            -   Manage dependencies and harmonize them if you have multiple apps on the same server

-   Digital Ocean

    -   Digital Ocean Droplet - \$4/month and host the apps with shinyproxy or shinyserver
        -   For light, intermittent usage

-   [Huggingface](https://huggingface.co/docs/hub/spaces-sdks-docker-shiny)

-   [Shinyapps.io](https://www.shinyapps.io/)

    -   As of 2023, \$13 for lowest paid tier.

-   Posit Connect

    -   [Posit Connect Cloud](https://connect.posit.cloud/)
    -   On Prem: [Posit Connect](https://shiny.posit.co/py/docs/deploy.html#deploy-to-posit-connect-commercial) (commercial)
    -   Benefits
        -   Comes with great integration with R and Python and comes with a lot more than just hosting Shiny apps
        -   Ability to deploy R/Python applications, R/Python API, RMarkdown reports that regenerate automatically, etc.
        -   Worth it if you're working with a team and delivering more than shiny apps (e.g. reports, cron jobs, etc.)
        -   Stability with Software licensing and Standard Software Support from Posit included
        -   Lower implementation costs
        -   Easier configuration and deployment of dashboard versions
        -   Authorization is included in the Posit Connect Subscription, with a wide range of options to choose from: (LDAP and Active Directory / SAML / OAuth 2.0 using Google Apps accounts / PAM / Proxied Authentication / SLA)
        -   Easier maintenance in production
        -   Option to add Posit Workbench and Package Manager
        -   Automatic scaling -- no need to manually trigger new processes
        -   An industry standard by Fortune 500 companies working with R
        -   Admin panel to manage users and monitor the logs and machine
    -   Costs
        -   A yearly Posit Connect subscription starts at \$14,995/year (USD)

-   On-Prem

    -   Advantages:

        -   Complete control over infrastructure

        -   Enhanced security and compliance

        -   No external dependencies

        -   Customizable configuration

        -   Integration with internal systems

    -   Challenges

        -   Infrastructure Costs

        -   Maintenance burden

        -   Scaling

        -   Backup and disaster recovery

        -   Update management
