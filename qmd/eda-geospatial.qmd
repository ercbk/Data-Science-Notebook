# Geospatial {#sec-eda-geo .unnumbered}

## Misc

-   Packages
    -   [{]{style="color: #990000"}[rgeoda](https://geodacenter.github.io/rgeoda/){style="color: #990000"}[}]{style="color: #990000"} - Tools for Exploratory Spatial Data Analysis such as Spatial Cluster Detection and Clustering Analysis, Regionalization, etc.
    -   [{]{style="color: #990000"}[GeoXp](https://github.com/tibo31/GeoXp/){style="color: #990000"}[}]{style="color: #990000"} ([Vignette](https://www.jstatsoft.org/article/view/v047i02)) - Interactive graphics for exploratory spatial data analysis
        -   Couples maps with Moran scatterplots, variogram clouds, Lorenz curves and other graphical tools
        -   Includes dimension reduction techniques such as principal components analysis and cluster analysis whose results are also linked to the map
    -   [{]{style="color: #990000"}[GHRexplore](https://cran.r-project.org/web/packages/GHRexplore/index.html){style="color: #990000"}[}]{style="color: #990000"} ([website](https://bsc-es.github.io/GHRtools/docs/GHRexplore/GHRexplore.html)) - Exploratory Analysis of Temporal and **Spatio-Temporal** *Health Data* (**Count Data**)
        -   A collection of commonly used visualizations of temporal and spatio-temporal health data including case counts, incidence rates, and covariates.
            -   Nothing in the vignette seems to preclude using this package for count data that isn't health related, especially for quick exploratory purposes.
        -   The available plot types include time series, heatmaps, seasonality plots, maps and more. The package supports standard data transformations such as temporal and spatial aggregations, while offering extensive customization options for the resulting figures.

## Continuous Outcome {#sec-eda-geo-cont .unnumbered}

-   [{ggmap}]{style="color: #990000"} Dot map

    -   [Example]{.ribbon-highlight}: Does Price vary by location?

    -   In your data, find the min and max latitude and longitude to specify a bounding box

        ``` r
        library(ggmap)
        bbox <- c(left = min_longitude, 
                  bottom = min_latitude, 
                  right = max_longitude, 
                  top = max_latitude)
        map_tiles <- get_stamenmap(bbox, zoom = 13)
        ```

    -   (Optional) Aggregate some of the data (i.e. dots)

        ``` r
        agg_dat <- dat %>%
            group_by(latitude = round(latitude, 2),
                    longitude = round(longitude, 2)) %>%
            summarize(avg_outcome = mean(numeric_outcome),
                      n = n())
        ```

    -   `scale_size_continuous` adjusts the range of dot sizes. This range makes them a little smaller.\
        ![](./_resources/EDA,_Geospatial.resources/Screenshot%20(334).png){.lightbox width="432"}

        ``` r
        ggmap(map_tiles) +
            geom_point(aes(longitude, latitude, 
                           size = n, 
                           color = avg_outcome), 
                       data = agg_dat) +
            scale_color_gradient2(low = "blue", 
                                  high = "red", 
                                  midpoint = midpoint_value_of_numeric_outcome,
                                  trans = "log10", 
                                  labels = dollar) +
            scale_size_continuous(range = c(0.5, 4)) +
            theme_map() +
            labs(color = "avg_outcome", 
                 size = "n")
        ```

        -   [trans]{.arg-text} and [labels]{.arg-text} are for the legend (I think).
