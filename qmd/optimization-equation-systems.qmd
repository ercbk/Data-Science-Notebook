# Optimization {#sec-opt .unnumbered}

## Misc {#sec-opt-misc .unnumbered}

-   Packages
    -   [CRAN Task View](https://cran.r-project.org/web/views/Optimization.html)

## Solvers {#sec-opt-solvers .unnumbered}

-   Base R
    -   `solve` - The default method is an interface to the LAPACK routines DGESV and ZGESV. LAPACK is from <https://netlib.org/lapack/>.

    -   [Example]{.ribbon-highlight}

        $$
        \begin{align}
        3x + 2y - z &= 7\\
        x - y + 2z &= -1\\
        2x + 3y + 4z &= 12
        \end{align}
        $$

        ``` r
        a <- 
          matrix(c(3, 2, -1, 1, -1, 2, 2, 3, 4),
                 nrow = 3, 
                 byrow = TRUE)
        b <- c(7, -1, 12)
        solve(a, b)
        #> [1] 0.6571429 2.8000000 0.5714286
        ```
-   Open Source
    -   See packages in bookmarks
    -   CBC
    -   Google OR Tools
-   Commercial
    -   XPress, CPLEX
    -   Gurobi
        -   For a DoorDash's vehicle routing problem, Gurobi was 34 times faster on average than CBC
        -   Pros
            -   Scalability of the solvers, ease of abstracting feasible solutions when optimality is hard, ability to tune for different formations, relatively easy API integration to Python and Scala, flexibility of the prototype and deployment licensing terms from the vendors, and professional support.

## Bipartite Matching Problem {#sec-opt-bmp .unnumbered}

-   A bipartite graph has 2 sets of vertices (e.g. Dashers and Merchants) and the edges (ETA to merchants) only travel between boths sets (Dashers and Merchants) and not within the sets (e.g. Dasher to Dasher).
-   Solution: [Hungarian Algorithm](https://en.wikipedia.org/wiki/Hungarian_algorithm) and a [lecture](https://www.youtube.com/watch?v=SAPG2T4Jbok) (15 min)
-   [Example]{.ribbon-highlight}: Optimally assign Dashers to Merchants\
    ![](./_resources/Optimization,_Equation_Systems.resources/unnamed-1.png){.lightbox width="532"}
    -   Shows DoorDash delivery persons (Dashers) with ETA times to merchants, estimated food pick-up times from merchants, estimated customer drop-off times
-   Issues:
    -   Runtime of large instances is excessive for a real-time dynamic system (polynomial time)
    -   Doesn't support more complicated routes with 2 or more tasks
        -   Example shows 5 merchants and only 4 Dashers, so at least one Dasher needs to travel to 2 Merchants

## Vehicle Routing Problem {#sec-opt-vrp .unnumbered}

-   <https://en.wikipedia.org/wiki/Vehicle_routing_problem>

    -   Allows multiple deliveries in a route

-   [Example]{.ribbon-highlight}: Optimizing Deliverers (Dashers) with food orders (Merchant/Customers) (See example in bipartite matching section)\
    ![](./_resources/Optimization,_Equation_Systems.resources/Screen-Shot-2020-03-02-at-8.png){.lightbox width="632"} ![](./_resources/Optimization,_Equation_Systems.resources/Screen-Shot-2020-02-24-at-2.png){.lightbox width="632"}

-   Can be solved using Mixed Integer Programming (MIP)

    -   [{ompr}]{style="color: #990000"}
    -   Also see [Logistics \>\> Case Study: DoorDash](https://ercbk.github.io/Domain-Knowledge-Notebook/qmd/logistics.html#sec-log-drdsh){style="color: green"} \>\> Optimization

## Budget Allocation {#sec-opt-ba .unnumbered}

-   Notes from [Automate Budget Planning Using Linear Programming](https://towardsdatascience.com/automate-budget-planning-using-linear-programming-5254aace697c)
-   Also see [Project Management \>\> Decision Models](project-planning.html#sec-proj-plan-decmod){style="color: green"} (details on calculations for a project budget application)
-   Misc
    -   Top Management Guidelines are for constraints but there may be other management objectives that are part of the decision making process
-   Considerations
    -   Return on investment (ROI) of each project after three years (€)
    -   Total costs and budget limits per year (€/Year)
-   Top management guidelines
    -   Sustainable Development (CO2 Reduction)
    -   Digital Transformation (IoT, Automation and Analytics)
    -   Operational Excellence (Productivity, Quality and Continuous Improvement)

### Process

-   [Scenario:]{.underline} Budget Planning Process
    -   As a Regional Director you need to allocate your budget on projects\
        ![](./_resources/Optimization,_Equation_Systems.resources/1-dr9aJ5RcxA_cLB16Ko3rIA.png){.lightbox width="632"}
        -   8 "Market Verticals": Luxury, Cosmetics, Fashion, etc.
-   [Build your Model]{.underline}
    1.  *Exploratory Data Analysis*
        -   Analyze the budget applications received\
            ![](./_resources/Optimization,_Equation_Systems.resources/1-iyLiVhtnomcs8MkazncKLA.png){.lightbox width="632"}
    2.  *Linear Programming Model*
        -   Decisions variables, objective function and constraints
        -   Objective Function: Maximize Total ROI\
            ![](./_resources/Optimization,_Equation_Systems.resources/1-o3k7tDepme9XD4X9dRCNZQ.png){.lightbox width="332"}
            -   Decision Variable: P is a boolean for whether project i is accepted or rejected
        -   Constraints
            -   Budget
                -   4.5 M€ that you split in three years (1.25M€, 1.5M€, 1.75M€)\
                    ![](./_resources/Optimization,_Equation_Systems.resources/1-eBo9HAaqTRPr8tA3n5AXUw.png){.lightbox width="332"}
            -   Strategic (Top Management Guidelines)\
                ![](./_resources/Optimization,_Equation_Systems.resources/1-nkMo4MUnwyy7sVSxEXIR1g.png){.lightbox width="432"}
                -   Omin, Smin, and Dmin = 1 M€
            -   Other potential constraints
                -   Maximum budget allocation per country, market vertical, or warehouse
                -   Budget allocation target (95% of the budget should be allocated)
    3.  *Initial Solution: Maximum ROI*
        -   What would be the results if you focus only on ROI maximization? (i.e. 0 constraints)
            -   Might need to apply budget constraints in this step.
    4.  *Final Solution*: Apply Budget and Strategic constraints to the model
-   [Conclusion & Next Steps]{.underline}
    -   Create an app or dashboard
        -   App may involve the user being able to select different constraints or values of those constraints
        -   Uploads budget applications (e.g. spreadsheets)
        -   Visuals for EDA
            -   Bar or circular chart: count or percent of applications per Market Vertical
            -   Bar: count of applications per Management Objective
        -   Visuals for results of optimization
            -   Bar chart for each variation of constraints chosen: allocation per Management Objective
