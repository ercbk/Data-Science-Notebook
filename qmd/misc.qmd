# Misc {#sec-misc .unnumbered}

## Misc {#sec-misc-misc .unnumbered}

-   Windows

    | Shortcut   | Description                         |
    |------------|-------------------------------------|
    | Ctrl + Tab | Change application                  |
    | Ctrl + \~  | Change window within an application |
    |            |                                     |

-   Browser

    | Shortcut                | Description                       |
    |-------------------------|-----------------------------------|
    | Ctrl + L                | To Address Bar                    |
    | Ctrl + w                | Close current tab                 |
    | Ctrl + t                | Open New Tab                      |
    | Ctrl + Shift + t        | Open Recently Closed Tab          |
    | Ctrl + Alt + left/right | Move one tab to the left or right |

-   R-devel (\>= 4.4.0) gained a command-line option to adjust the limit connections (previous limit was 128 parallel workers)

    ``` bash
    $ R
    > parallelly::availableConnections()
    [1] 128

    $ R --max-connections=512
    > parallelly::availableConnections()
    [1] 512
    ```

## RStudio {#sec-misc-rstud .unnumbered}

-   Job: Run script in the background

    ``` r
    library(rstudioapi)
    jobRunScript("wfsets_desperation_tune.R", name = "tune", exportEnv = "R_GlobalEnv")
    ```

    -   Need to look up args
    -   I think exportEnv takes the variables in your current environment and runs the script with them as inputs

-   Shortcuts

    | Shortcut             | Description                                        |
    |----------------------|----------------------------------------------------|
    | Alt + Shift + k      | Keyboard Shortcuts                                 |
    | Ctrl + Shift + p     | Command Palette                                    |
    | Ctrl + Shift + f     | Find in Files                                      |
    | Ctrl + Alt + up/down | Multiple Cursors                                   |
    | Ctrl + Shift + z     | Reverse Undo                                       |
    | Ctrl + Shift + a     | Format highlighted code (style/linter the code)    |
    | Ctrl + d             | Delete current line                                |
    | Alt + up/down        | Yank line up or down                               |
    | Ctrl + Alt + up/down | Copy the above line (or selected lines) down or up |
    | Ctrl + .             | Go to file/function name                           |

    -   [Customizing Shortcuts in RStudio](https://support.posit.co/hc/en-us/articles/206382178-Customizing-Keyboard-Shortcuts)

    -   {[shrtcts](https://pkg.garrickadenbuie.com/shrtcts/)} - Make anything a shortcut in RStudio

## Hackathon Criteria {#sec-misc-hack .unnumbered}

![](./_resources/Misc.resources/1-fPKRR5rUDIXzC_b85HeBzg.jpeg)

## Update R {#sec-misc-update .unnumbered}

-   Misc
    -   [{]{style="color: #990000"}[rig](https://github.com/r-lib/rig){style="color: #990000"}[}]{style="color: #990000"} - r version management system
    -   `update.packages(checkBuilt = TRUE, ask = FALSE)` is supposed to search for packages in other R versions and update them in the new R version, but I haven't tried it, yet.
    -   Errors when compiling from source may require installing libraries and they'll supply code to install via "pacman"
        -   Open Start \>\> scroll down to RTools40 \>\> RTools Bash
        -   Paste pacman code and hit enter to install
    -   Problem packages in the past
        -   [{brms}]{style="color: #990000"} dependency, [{igraph}]{style="color: #990000"}, didn't have a binary on CRAN and wouldn't compile from source even with correct libraries installed.
            -   Sol'n: `install.packages("igraph", repos = 'https://igraph.r-universe.dev')`
                -   installs dev version from r-universe
        -   Some [{easystats}]{style="color: #990000"} packages had gave [{pak}]{style="color: #990000"} some problems. No difficulties using `install.packages` with default repo or if they had a r-universe repo though.
-   Steps
    -   Copy user installed packages in current R version

        -   In R:

            ``` r
            squirrel <- names(installed.packages(priority = "NA")[, 1]) # user installed packages
            readr::write_rds(squirrel, "packages.rds")
            ```

            -   Then, close RStudio

    -   RTools: Check to see if you have the latest because you'll need it to compile some of newest versions of packages.

        -   Your rtools folder has the version in it's folder name.
        -   rtools [website](https://cran.r-project.org/bin/windows/Rtools/) has the latest version and an .exe to download

    -   Check/Update rig version

        -   In powershell: `rig --version`
        -   Check current rig release: [link](https://github.com/r-lib/rig/releases)
        -   Download and install if your version isn't current

    -   Install new version of R

        -   Close R if not already closed
        -   `rig add release` installs the latest version of R.
        -   `rig default <new_r_version>` sets that version as the default

    -   Add R and RTools to path

        -   Right-click Windows \>\> System \>\> (right panel) Advanced System Settings \>\> Environment Variables \>\> Under User Variables, highlight Path, click Edit \>\> Click Add
            -   R: Add path to directory with all the RScript, R exe, etc. e.g. "C:\\Program Files\\R\\R-4.2.3\\bin\\x64"
            -   RTools: e.g. "C:\\rtools43\\usr\\bin"

    -   Open R and confirm new version

        -   If RStudio
            -   The setting of the new version to the "default" version of R in rig should result in RStudio loading the new version.
            -   If not, Tools \>\> Global Options \>\> General
                -   Under "R version", click "change" button; choose new R version
                -   Quit session and restart RStudio

    -   Install "high maintenance" packages

        -   I've had issues with {pak} installing packages that need to be compiled. Maybe be worth trying {pak} first to see if they've fixed it.
        -   [{cmdstanr}]{style="color: #990000"} doesn't live on CRAN, so you have to use: `install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))`
            -   Check for latest cmdstan version
                -   After loading the package, `library(cmdstanr)` , it should run a check on your cmdstan version and tell you if there's a newer version.
                -   To update, first check toolchain: `check_cmdstan_toolchain()`
                    -   Might tell you to update RTools or that you need some C++ library added
                -   Fix C++ toolchain with `check_cmdstan_toolchain(fix = TRUE)`
                -   Update cmdstan: `install_cmdstan()`
                -   May need to install {rstudioapi} and run `rstudioapi::restartSession()` (programmatically) or just `ctrl + shift + f10` so that this package can be used as a dependency for other packages that need to be installed.
        -   [{rstanarm}]{style="color: #990000"}: `install.packages("rstanarm")`

    -   Install other packages

        ``` r
        moose <- readRDS("packages.rds")
        moose <- moose[!moose %in% c("cmdstanr", "rstanarm", "ebtools", "translations", "<RStudio add-ins>")]

        # Next time, add a try/catch? or maybe purrr::safely, so that it continues through errors. Also, need to log pkgs that do error.
        for (i in seq_len(length(moose))) {
          print(moose[i])
          pak::pkg_install(moose[i])
        }

        fs::file_delete("packages.rds")
        ```

        -   [{ebtools}]{style="color: #990000"} is my personal helper package.
        -   [{translations}]{style="color: #990000"} is a system package that shouldn't have been included when I saved the packages from previous version, but was when I recently updated. Might not be necessary to include it in the excuded packages in the future.

    -   Check for updates of RStudio ([link](https://posit.co/download/rstudio-desktop/))

        -   Current version under Help \>\> About Rstudio
        -   Possible to check for updates under Help \>\> Check for Updates, but that's failed me before.
